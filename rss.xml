<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd"
  xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/">
  <channel>
    <title>James Gregory</title>
    <link>http://www.jagregory.com</link>
    <description>Code monkey. ThoughtWorks. Chief Agitator.
</description>
    <pubDate>Tue, 05 May 2015 00:00:00 +1000</pubDate>
    <item>
      <title>Sinopia: a private NPM registry</title>
      <link>http://www.jagregory.com/writings/sinopia-private-npm-registry</link>
      <description>&lt;p&gt;Not all of our packages can be pushed to the public NPM repository. Proprietary code and uninteresting code we want to keep internal, but until recently the package distribution story for this code has been worse than open-sourcing it. You either modularise it and publish to the world, or you have a bad time.&lt;/p&gt;

</description>
      <pubDate>Tue, 05 May 2015 00:00:00 +1000</pubDate>
      <dc:date>2015-05-05T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>My ever evolving development virtualisation situation</title>
      <link>http://www.jagregory.com/writings/virtualised-development-environments</link>
      <description>&lt;p&gt;Over the past few years I’ve moved closer and closer to virtualising my entire development environment. It started with developing for Windows whilst using a Mac, continued when I refused to sully my machine with some godforsaken Oracle product, and has now reached completion with the arrival of a new laptop and an unwillingness to install RVM again.&lt;/p&gt;

</description>
      <pubDate>Wed, 12 Feb 2014 23:15:00 +1100</pubDate>
      <dc:date>2014-02-12T23:15:00+11:00</dc:date>
    </item>
    <item>
      <title>Converting and preserving Michael Abrash's Graphics Programming Black Book</title>
      <link>http://www.jagregory.com/writings/converting-and-preserving-michael-abrash-graphics-programming-black-book</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;tl;dr&lt;/strong&gt; The Markdown source of Michael Abrash’s Graphics Programming Black Book is available &lt;a href=&quot;https://github.com/jagregory/abrash-black-book&quot;&gt;on Github&lt;/a&gt;, there are Epub and Mobi versions on the &lt;a href=&quot;https://github.com/jagregory/abrash-black-book/releases&quot;&gt;Github Releases list&lt;/a&gt;, and you can read an online copy of the book &lt;a href=&quot;http://www.jagregory.com/abrash-black-book/&quot;&gt;on my website&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It started out as an attempt to read &lt;a href=&quot;http://en.wikipedia.org/wiki/Michael_Abrash&quot;&gt;Michael Abrash’s&lt;/a&gt; Graphics Programming Black Book over the Christmas period. It turned into a epic mission of &lt;code class=&quot;highlighter-rouge&quot;&gt;grep&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt;, and a few blisters.&lt;/p&gt;

</description>
      <pubDate>Mon, 20 Jan 2014 06:45:00 +1100</pubDate>
      <dc:date>2014-01-20T06:45:00+11:00</dc:date>
    </item>
    <item>
      <title>Compiled Templates for Go</title>
      <link>http://www.jagregory.com/writings/compiled-templates-for-go</link>
      <description>&lt;p&gt;&lt;a href=&quot;https://github.com/jagregory/cote&quot;&gt;Cote&lt;/a&gt; is a compiled templating language for &lt;a href=&quot;http://golang.org&quot;&gt;Go&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Template languages fall roughly into two criteria: template specific language or the same language your system uses, and a custom markup language or they don’t care. &lt;a href=&quot;https://github.com/jagregory/cote&quot;&gt;Cote&lt;/a&gt; falls into the second of both criteria, it uses pure Go for logic and the content can be anything. Your output can be anything text based.&lt;/p&gt;

</description>
      <pubDate>Mon, 14 Oct 2013 16:12:00 +1100</pubDate>
      <dc:date>2013-10-14T16:12:00+11:00</dc:date>
    </item>
    <item>
      <title>Go Slice Visualiser</title>
      <link>http://www.jagregory.com/writings/go-slice-visualiser</link>
      <description>&lt;p&gt;I’ve been learning &lt;a href=&quot;http://golang.org&quot;&gt;Go&lt;/a&gt; recently; it’s been fun.&lt;/p&gt;

&lt;p&gt;An interesting aspect of Go is &lt;a href=&quot;http://blog.golang.org/go-slices-usage-and-internals&quot;&gt;Slices&lt;/a&gt;, which are lightweight views of an array. Why these are useful and necessary makes more sense when you understand Go’s &lt;a href=&quot;http://golang.org/doc/faq#pass_by_value&quot;&gt;pass-by-value&lt;/a&gt; semantics.&lt;/p&gt;

&lt;p&gt;Whilst playing with slices, I put together a little visualiser to help understand their behaviour (the act of building it was probably more useful than the end result).&lt;/p&gt;

</description>
      <pubDate>Sun, 07 Jul 2013 16:30:00 +1000</pubDate>
      <dc:date>2013-07-07T16:30:00+10:00</dc:date>
    </item>
    <item>
      <title>Rails production 500 error page showing in dev</title>
      <link>http://www.jagregory.com/writings/rails-500-error-showing-in-dev</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;We’re sorry, but something went wrong!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’ve been seeing some strange behaviour on the development environment for &lt;a href=&quot;http://www.getonthegame.com.au&quot;&gt;On the Game&lt;/a&gt; recently. I’ve just spent an hour combing through every line of code that varies from a standard Rails app, and I’ve finally found the issue. I’m putting it here for posterity.&lt;/p&gt;

</description>
      <pubDate>Thu, 05 Jul 2012 00:00:00 +1000</pubDate>
      <dc:date>2012-07-05T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Learning. It ain't hard.</title>
      <link>http://www.jagregory.com/writings/learning-it-aint-hard</link>
      <description>&lt;p&gt;“I don’t have enough free time to learn a new language!”, or tool, or framework, etc. I hear this often. I appreciate we all handle things differently, but here’s my take on it.&lt;/p&gt;

</description>
      <pubDate>Wed, 06 Jul 2011 00:00:00 +1000</pubDate>
      <dc:date>2011-07-06T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Rhino Licensing</title>
      <link>http://www.jagregory.com/writings/rhino-licensing</link>
      <description>&lt;p&gt;&lt;a href=&quot;https://github.com/ayende/rhino-licensing&quot;&gt;Rhino Licensing&lt;/a&gt; is an open-source licensing framework by &lt;a href=&quot;http://ayende.com&quot;&gt;Ayende Rahien&lt;/a&gt;, and it grew out of his frustration with other license providers while creating &lt;a href=&quot;http://nhprof.com/&quot;&gt;NHibernate Profiler&lt;/a&gt;.&lt;/p&gt;

</description>
      <pubDate>Tue, 11 Jan 2011 00:00:00 +1100</pubDate>
      <dc:date>2011-01-11T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>NDC 2010</title>
      <link>http://www.jagregory.com/writings/ndc-2010</link>
      <description>&lt;p&gt;&lt;a href=&quot;http://www.ndc2010.no&quot;&gt;NDC 2010&lt;/a&gt; was a huge success, if you ask me. This was largely down to the NDC team, who deserve all the praise they’re getting (and much more). Unlike conferences I’ve been to in the past, NDC was truely by the people, for the people. &lt;a href=&quot;http://blog.scottbellware.com&quot;&gt;Scott Bellware&lt;/a&gt; put it much better than I could, with his &lt;a href=&quot;http://blog.scottbellware.com/2010/06/praise-for-norwegian-developers.html&quot;&gt;praise for Norwegian Developers&lt;/a&gt; (and Kjersti Sandberg). Herself and the rest of the team were there because they wanted to be, not because they had to. The whole attitude surrounding this conference was one of learning, not plugging products or motives.&lt;/p&gt;

</description>
      <pubDate>Tue, 22 Jun 2010 00:00:00 +1000</pubDate>
      <dc:date>2010-06-22T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Speaking engagements in 2010</title>
      <link>http://www.jagregory.com/writings/speaking-engagements-2010</link>
      <description>&lt;p&gt;In an attempt to get out of my shell more this year, I’ve taken up speaking (at conferences, not just in general). First came my &lt;a href=&quot;/writings/git-e-van-recording/&quot;&gt;Git E-VAN&lt;/a&gt;, then came &lt;a href=&quot;http://fiesta.lostechies.com/&quot;&gt;Pablo’s Fiesta&lt;/a&gt;, so what else have I got lined up this year?&lt;/p&gt;

</description>
      <pubDate>Wed, 31 Mar 2010 00:00:00 +1100</pubDate>
      <dc:date>2010-03-31T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Git E-VAN recording</title>
      <link>http://www.jagregory.com/writings/git-e-van-recording</link>
      <description>&lt;p&gt;Last monday (8th of Feb) I did an &lt;a href=&quot;/writings/git-e-van/&quot;&gt;E-VAN on Git&lt;/a&gt;; an introductory talk on Git and DVCS, covering pretty much everything you need to know for day-to-day Git life. I think it went down well, certainly didn’t &lt;em&gt;hear&lt;/em&gt; anyone complaining.&lt;/p&gt;

</description>
      <pubDate>Wed, 17 Feb 2010 00:00:00 +1100</pubDate>
      <dc:date>2010-02-17T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Git E-VAN</title>
      <link>http://www.jagregory.com/writings/git-e-van</link>
      <description>&lt;p&gt;Just a reminder that tonight I’ll be doing an &lt;a href=&quot;http://europevan.blogspot.com/2010/01/next-european-van-on-08-february-2010.html&quot;&gt;E-VAN on Git&lt;/a&gt; tonight at 7pm GMT.&lt;/p&gt;

&lt;p&gt;It’s going to be a pretty basic talk on what Git is (and indirectly what DVCS is), and a demo on how to use most of the features you’ll need daily. There might be some advanced talk at the end, depending on how well I time things.&lt;/p&gt;

</description>
      <pubDate>Mon, 08 Feb 2010 00:00:00 +1100</pubDate>
      <dc:date>2010-02-08T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Git: Remotes, contributions, and the letter N</title>
      <link>http://www.jagregory.com/writings/git-remotes-contributions-and-the-letter-n</link>
      <description>&lt;p&gt;Here’s a few ways to think about Git and it’s distributed nature.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You deal with multiples of repositories, not a single central repository&lt;/li&gt;
  &lt;li&gt;Updates come from a remote repository, and changes are pushed to a remote; none of these repositories have to be the same&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Origin&lt;/em&gt; is the canonical name for the repository you cloned from&lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Upstream&lt;/em&gt; is the canonical name for the original project repository you forked from&lt;/li&gt;
&lt;/ul&gt;

</description>
      <pubDate>Sun, 07 Feb 2010 00:00:00 +1100</pubDate>
      <dc:date>2010-02-07T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Behaviours in MSpec</title>
      <link>http://www.jagregory.com/writings/behaviours-in-mspec</link>
      <description>&lt;p&gt;&lt;a href=&quot;http://github.com/machine/machine.specifications&quot;&gt;MSpec&lt;/a&gt; is awesome, I think it’s praised by myself and others enough for that particular point to not need any expansion; however, there is a particular feature I would like to highlight that hasn’t really got a lot of press: behaviours.&lt;/p&gt;

&lt;p&gt;Behaviours define reusable specs that encapsulate a particular set of, you guessed it, behaviours; you’re then able to include these specs in any context that exhibits a particular behaviour.&lt;/p&gt;

</description>
      <pubDate>Fri, 22 Jan 2010 00:00:00 +1100</pubDate>
      <dc:date>2010-01-22T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Git's guts: Merging and rebasing</title>
      <link>http://www.jagregory.com/writings/gits-guts-merging-and-rebasing</link>
      <description>&lt;p&gt;Here we go again, explaining the internals of Git with the intention of helping you understand what you’re doing day-to-day. Last time I covered &lt;a href=&quot;/writings/gits-guts-branches-head-and-fast-forwards&quot;&gt;branches, HEAD, and fast-forwarding&lt;/a&gt;. Today we’ll dive into the guts of merging and rebasing.&lt;/p&gt;

</description>
      <pubDate>Fri, 27 Nov 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-11-27T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Git's guts: Branches, HEAD, and fast-forwards</title>
      <link>http://www.jagregory.com/writings/gits-guts-branches-head-and-fast-forwards</link>
      <description>&lt;p&gt;Lets get some learning done. There are a few questions that keep cropping up when I introduce people to Git, so I thought I’d post some answers as a mini-series of blog posts. I’ll cover some fundamentals, while trying not to retread too much ground that the fantastic &lt;a href=&quot;http://book.git-scm.com&quot;&gt;Git community book&lt;/a&gt; already covers so well. Instead I’m going to talk about things that should help you understand what you and Git are doing day-to-day.&lt;/p&gt;

</description>
      <pubDate>Wed, 25 Nov 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-11-25T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate 1.0 RTM</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-10-rtm</link>
      <description>&lt;p&gt;It’s &lt;a href=&quot;http://fluentnhibernate.org/downloads&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For those of you that don’t know, &lt;a href=&quot;http://fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt; is for helping you map entities with &lt;a href=&quot;http://nhforge.org&quot;&gt;NHibernate&lt;/a&gt;. It’s based firmly on the practice of &lt;a href=&quot;http://en.wikipedia.org/wiki/Convention_over_configuration&quot;&gt;convention-over-configuration&lt;/a&gt;, and can be used in a mapping-per-class style using our &lt;a href=&quot;http://wiki.fluentnhibernate.org/Fluent_mapping&quot;&gt;fluent interface&lt;/a&gt;, or let our &lt;a href=&quot;http://wiki.fluentnhibernate.org/Auto_mapping&quot;&gt;automapper&lt;/a&gt; map your entities itself.&lt;/p&gt;

</description>
      <pubDate>Sat, 29 Aug 2009 00:00:00 +1000</pubDate>
      <dc:date>2009-08-29T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Preventing debugger property evaluation for side-effect laden properties</title>
      <link>http://www.jagregory.com/writings/preventing-debugger-property-evaluation-side-effects</link>
      <description>&lt;p&gt;Property getters with side-effects, now there’s a controversial subject if ever I saw one. Don’t do it is the rule; as with any rule though, there’s generally an exception that proves it. If you’re in this situation and you genuinely do have a scenario that requires a property getter to have side-effects, then there’s a side-effect (ha!) that you should be aware of.&lt;/p&gt;

</description>
      <pubDate>Tue, 18 Aug 2009 00:00:00 +1000</pubDate>
      <dc:date>2009-08-18T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate 1.0RC</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-10rc</link>
      <description>&lt;p&gt;It’s nearly here, at long last &lt;a href=&quot;http://fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt; has nearly reached 1.0. Now starts the official public testing of our 1.0RC.&lt;/p&gt;

&lt;p&gt;You can read the &lt;a href=&quot;http://wiki.fluentnhibernate.org/Release_notes_1.0&quot;&gt;release notes&lt;/a&gt; on the wiki for more information on what’s changed. There have been a lot of small breaking changes in the fluent interface, mostly reducing it’s verbosity, and a few larger changes elsewhere. Don’t expect to download this and have it &lt;em&gt;just work&lt;/em&gt;, because it won’t; hopefully it shouldn’t be too painful though.&lt;/p&gt;

</description>
      <pubDate>Sun, 16 Aug 2009 00:00:00 +1000</pubDate>
      <dc:date>2009-08-16T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Git and command-line fear</title>
      <link>http://www.jagregory.com/writings/git-and-command-line-fear</link>
      <description>&lt;p&gt;&lt;a href=&quot;http://git-scm.org&quot;&gt;Git&lt;/a&gt; has been gaining a lot of traction lately, and rightly so. I’ve used it for a couple of years now, for all my projects (&lt;a href=&quot;http://fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt; and &lt;a href=&quot;http://docu.jagregory.com&quot;&gt;Docu&lt;/a&gt; being the prominent ones), but something that hasn’t changed is the tag-line of “but Windows support isn’t very good!”. What you quickly learn is that when people say that, they actually mean there isn’t a Visual Studio plug-in or some similar all-singing all-dancing GUI; this is a dire misrepresentation of Git, because it’s tooling on Windows is excellent if your definition of tooling includes the command-line.&lt;/p&gt;

</description>
      <pubDate>Mon, 20 Jul 2009 00:00:00 +1000</pubDate>
      <dc:date>2009-07-20T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>What's been happening in Fluent NHibernate land?</title>
      <link>http://www.jagregory.com/writings/whats-been-happening-in-fluent-nhibernate-land</link>
      <description>&lt;p&gt;&lt;a href=&quot;http://www.fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt; has seen a flurry of development followed by a complete lack of commits, I figure it’s time to let everyone know what’s going on.&lt;/p&gt;

</description>
      <pubDate>Tue, 28 Apr 2009 00:00:00 +1000</pubDate>
      <dc:date>2009-04-28T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>I'm a Los Techie</title>
      <link>http://www.jagregory.com/writings/im-a-los-techie</link>
      <description>&lt;p&gt;Just to let anyone know that hasn’t heard by other means, I’m now blogging at &lt;a href=&quot;http://lostechies.com&quot;&gt;Los Techies&lt;/a&gt;. I’m going to cross-post between these two blogs, so there’s no need to update your feeds if you’re too lazy; but if you’re already subscribing to the Los Techies general feed then you’ll now get me too.&lt;/p&gt;

&lt;p&gt;You can find my blog at: &lt;a href=&quot;http://jagregory.lostechies.com&quot;&gt;jagregory.lostechies.com&lt;/a&gt;.&lt;/p&gt;

</description>
      <pubDate>Sat, 28 Mar 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-03-28T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate usage stats</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-usage-stats</link>
      <description>&lt;p&gt;I’ve just been totting up some figures on how &lt;a href=&quot;http://fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt; is doing, thought I’d share them with anyone that’s interested.&lt;/p&gt;

</description>
      <pubDate>Sat, 21 Mar 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-03-21T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Docu + 2 days</title>
      <link>http://www.jagregory.com/writings/docu-2-days</link>
      <description>&lt;p&gt;It’s been two days since I &lt;a href=&quot;/writings/introducing-docu-simple-doc-gen-for-net/&quot;&gt;announced&lt;/a&gt; &lt;a href=&quot;http://docu.jagregory.com&quot;&gt;docu&lt;/a&gt;, my simple documentation generator for .Net apps.&lt;/p&gt;

&lt;p&gt;The reception it’s received has been positive, I never expected it to have a surge of popularity because it’s not that kind of tool, so it hasn’t come as much of a surprise that people haven’t been jumping all over it. Having said that though, I have had some good feedback and already someone has contributed a patch. Additionally, there hasn’t been one question as to why I’ve created it; now this has come as a surprise, I guess I’m &lt;strong&gt;not&lt;/strong&gt; the only one that feels Sandcastle is bloated and overcomplicated. Yay!&lt;/p&gt;

</description>
      <pubDate>Sat, 21 Mar 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-03-21T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Introducing Docu - Simple doc gen for .Net</title>
      <link>http://www.jagregory.com/writings/introducing-docu-simple-doc-gen-for-net</link>
      <description>&lt;p&gt;Dilemma. People want API documentation (for &lt;a href=&quot;http://fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt; specifically), but I don’t want to associate myself with the awful MSDN-style documentation that’s produced by Sandcastle.&lt;/p&gt;

</description>
      <pubDate>Thu, 19 Mar 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-03-19T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate: Conventions Rewrite</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-conventions-rewrite</link>
      <description>&lt;p&gt;I’ve just committed a rather large update to the Fluent NHibernate conventions code. This post explains why I’ve done this, and gives you some starting points to update your code. Anything else you need can be found on the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki&quot;&gt;wiki&lt;/a&gt; under &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki/Conventions&quot;&gt;conventions&lt;/a&gt; and &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki/Converting-to-new-style-conventions&quot;&gt;converting to new-style conventions&lt;/a&gt;.&lt;/p&gt;

</description>
      <pubDate>Wed, 11 Mar 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-03-11T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate: Auto mapping, overrides and alterations</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-auto-mapping-overrides-and-alterations</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Notice:&lt;/strong&gt; This is an excerpt from the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki/Auto-mapping&quot;&gt;Auto Mapping&lt;/a&gt; wiki page. It is recommended you refer to those pages for the latest version of this content, as this blog post will not be maintained for correctness.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;When using the Auto Mapping facilities of &lt;a href=&quot;http://www.fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt; you can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;ForMappingsThatDeriveFrom&lt;/code&gt; method described in &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki/Auto-mapping&quot;&gt;Altering Entities&lt;/a&gt; to override the mappings for specific entities, but that can quickly become cluttered if you’re having to alter many entities.&lt;/p&gt;

</description>
      <pubDate>Tue, 10 Feb 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-02-10T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate - The official website</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-the-official-website</link>
      <description>&lt;p&gt;“Documentation? What documentation!” I hear you say. Yes, Fluent NHibernate is not best known for it’s abundance of documentation. I know.&lt;/p&gt;

&lt;p&gt;I’ve realised that over the past couple of months Fluent NHibernate has been growing in popularity, stupidly so. We’ve got new features out the bjingo, an active mailing list, and a flow of people moaning on twitter. Well I figure enough is enough, we need a proper website; googlecode is great for hosting, but it’s wiki is poor, we needed something better.&lt;/p&gt;

</description>
      <pubDate>Wed, 04 Feb 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-02-04T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent green and brown</title>
      <link>http://www.jagregory.com/writings/fluent-green-and-brown</link>
      <description>&lt;p&gt;To paint a very black-and-white picture, there are two camps of applications: greenfield and brownfield. Greenfield are generally nice, they have good separation of concerns, probably an IoC container, they may even be covered by unit tests. Brownfield apps are not. They generally don’t have great separation of concerns (they’re usually pretty concerned about everything), they definitely don’t have great unit test coverage (but you’re working on it!), and they don’t have IoC containers.&lt;/p&gt;

</description>
      <pubDate>Wed, 04 Feb 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-02-04T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate: Configuring your application</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-configuring-your-application</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Notice:&lt;/strong&gt; The content in this post may be out of date, please refer to the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki/Fluent-configuration&quot;&gt;Fluent Configuration&lt;/a&gt; page in the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki&quot;&gt;Fluent NHibernate Wiki&lt;/a&gt; for the latest version.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There’s been a grey area of how to actually configure your application to use &lt;a href=&quot;http://www.fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt;, and also how to configure some more complicated situations (such as mixing fluent and non-fluent mappings). After some thought I’ve committed a change that should make things clearer. What follows is a few examples of how this new API can be used.&lt;/p&gt;

</description>
      <pubDate>Tue, 03 Feb 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-02-03T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>I think you mean a many-to-one, sir</title>
      <link>http://www.jagregory.com/writings/i-think-you-mean-a-many-to-one-sir</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;This is a question that crops up &lt;strong&gt;a lot&lt;/strong&gt;, in various forms, on the &lt;a href=&quot;http://www.fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt; and &lt;a href=&quot;http://groups.google.com/group/nhusers&quot;&gt;NHibernate Users&lt;/a&gt; mailing lists. &lt;em&gt;My one-to-one mapping isn’t working, what’s wrong?&lt;/em&gt; aka Incorrectly using a one-to-one relationship when you actually need a many-to-one.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There’s a common misunderstanding where people try to use a one-to-one relationship where a many-to-one is appropriate. I believe this is because people tend to get tunnel vision when designing their entities, which leads them to make incorrect assumptions. They focus on one entity at a time, and when that has a single entity related to it, they jump to the conclusion it’s a one-to-one they need; after all, there’s their current entity (one) and the related entity (to-one). They’re actually forgetting that there can be multiple instances of their &lt;em&gt;current entity&lt;/em&gt;.&lt;/p&gt;

</description>
      <pubDate>Tue, 27 Jan 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-01-27T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Introduction to static reflection</title>
      <link>http://www.jagregory.com/writings/introduction-to-static-reflection</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;This post could’ve also been called “Fluent NHibernate secrets exposed!” but it sounded a bit sensationalist.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You may have heard people mention static reflection recently, quite possibly because it’s used extensively in &lt;a href=&quot;http://www.fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt;, &lt;a href=&quot;http://ayende.com/projects/rhino-mocks.aspx&quot;&gt;Rhino Mocks&lt;/a&gt;, and I believe &lt;a href=&quot;http://www.lostechies.com/blogs/jimmy_bogard/&quot;&gt;Jimmy Bogard’s&lt;/a&gt; new &lt;a href=&quot;http://www.codeplex.com/AutoMapper&quot;&gt;AutoMapper&lt;/a&gt; also uses it; pretty much any of the new “fluent” interfaces use some kind of static reflection.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So what actually is static reflection?&lt;/strong&gt; Well, it’s a statically compiled way of utilising the Reflection API.&lt;/p&gt;

</description>
      <pubDate>Mon, 26 Jan 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-01-26T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate: Auto mapping and base-classes</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-auto-mapping-and-base-classes</link>
      <description>&lt;p&gt;Carrying on with the &lt;a href=&quot;http://www.fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt; Auto Mapping theme, I’ll now demonstrate how to map inheritance hierarchies.&lt;/p&gt;

&lt;p&gt;There are two main things that you’d want to do with inherited classes, either ignore the base class all together, or map them using an inheritance strategy. I’m going to start with the former, then move on to the latter.&lt;/p&gt;

</description>
      <pubDate>Mon, 26 Jan 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-01-26T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate: Auto Mapping Components</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-auto-mapping-components</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Notice:&lt;/strong&gt; The content in this post may be out of date, please refer to the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki/Auto-mapping&quot;&gt;Auto Mapping&lt;/a&gt; page in the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki&quot;&gt;Fluent NHibernate Wiki&lt;/a&gt; for the latest version.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’ve just committed a change that should allow automatic mapping of simple components; by simple, I mean components that just map properties, nothing fancy. I’ll be looking to expand this functionality in the future, but for the time being any kind of relationships aren’t supported within components. With that in mind, I’ll walk through how to automap your components.&lt;/p&gt;

</description>
      <pubDate>Mon, 19 Jan 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-01-19T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate: Mapping private and protected properties</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-mapping-private-and-protected-properties</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Notice:&lt;/strong&gt; The content in this post may be out of date, please refer to the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki/Fluent-mapping&quot;&gt;Fluent Mapping&lt;/a&gt; page in the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki&quot;&gt;Fluent NHibernate Wiki&lt;/a&gt; for the latest version.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There’s been a point of contention for some users of &lt;a href=&quot;http://www.fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt; since the beginning, and that’s the lack of a method of mapping private and protected properties on their domain entities.&lt;/p&gt;

&lt;p&gt;The issue stems from our use of lambda expressions for static reflection of your entities, one of the appealing properties of Fluent NHibernate; by utilising expressions we’re able to protect your mappings from refactoring side-effects. However, lambda expressions can only reference properties that are public on an object, so that makes it difficult to use against protected or private properties.&lt;/p&gt;

</description>
      <pubDate>Tue, 13 Jan 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-01-13T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate: Auto Mapping Type Conventions</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-auto-mapping-type-conventions</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Notice:&lt;/strong&gt; The content in this post may be out of date, please refer to the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki/Auto-mapping&quot;&gt;Auto Mapping&lt;/a&gt; page in the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki&quot;&gt;Fluent NHibernate Wiki&lt;/a&gt; for the latest version.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’ve already covered how to auto map a basic domain, as well as how to customise some of the conventions that the auto mapper uses. There are some more in-depth customisations you can do to the conventions that I’ll cover now.&lt;/p&gt;

</description>
      <pubDate>Sun, 11 Jan 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-01-11T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate: Auto Mapping Entity Conventions</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-auto-mapping-entity-conventions</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Notice:&lt;/strong&gt; The content in this post is out of date, please refer to the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki/Auto-mapping&quot;&gt;Auto Mapping&lt;/a&gt; page in the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki&quot;&gt;Fluent NHibernate Wiki&lt;/a&gt; for the latest version.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This post should be short and sweet. We want to alter our &lt;strong&gt;has many&lt;/strong&gt; relationship from &lt;code class=&quot;highlighter-rouge&quot;&gt;Shelf&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;Product&lt;/code&gt; so that it has a cascade set on it. We don’t want this to affect all one-to-many’s in our domain, so we need to do this alteration only on the &lt;code class=&quot;highlighter-rouge&quot;&gt;Shelf&lt;/code&gt; entity rather than with an &lt;code class=&quot;highlighter-rouge&quot;&gt;ITypeConvention&lt;/code&gt;.&lt;/p&gt;

</description>
      <pubDate>Sun, 11 Jan 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-01-11T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate: Auto Mapping Conventions</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-auto-mapping-conventions</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Notice:&lt;/strong&gt; The content in this post is out of date, please refer to the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki/Auto-mapping&quot;&gt;Auto Mapping&lt;/a&gt; page in the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki&quot;&gt;Fluent NHibernate Wiki&lt;/a&gt; for the latest version.&lt;/p&gt;

  &lt;p&gt;This is a continuation of my previous &lt;a href=&quot;/writings/fluent-nhibernate-auto-mapping-introduction/&quot;&gt;Auto Mapping Introduction&lt;/a&gt; post, and is based on the same revision of &lt;a href=&quot;http://www.fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Auto mappings are generated based on a set of conventions, assumptions about your environment, that mean you can map your entire domain with a miniscule amount of code. Sometimes however, the conventions we supply are not to your liking, perhaps you’re a control freak and want 100% control, or more likely you’re working against an existing database that has it’s own set of standards. You’d still like to use the auto mapper, but can’t because it maps your entities all wrong.&lt;/p&gt;

&lt;p&gt;Luckily for you we’ve thought about that, you can customise the conventions that the auto mapper uses.&lt;/p&gt;

</description>
      <pubDate>Sun, 11 Jan 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-01-11T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate: Auto Mapping Introduction</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-auto-mapping-introduction</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Notice:&lt;/strong&gt; The content in this post may be out of date, please refer to the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki/Auto-mapping&quot;&gt;Auto Mapping&lt;/a&gt; page in the &lt;a href=&quot;https://github.com/jagregory/fluent-nhibernate/wiki&quot;&gt;Fluent NHibernate Wiki&lt;/a&gt; for the latest version.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; this was written against &lt;a href=&quot;http://code.google.com/p/fluent-nhibernate/source/detail?r=190&quot;&gt;r190&lt;/a&gt; of &lt;a href=&quot;http://www.fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt;, so you need to be at least at that revision to follow along.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Fluent NHibernate has a concept called Auto Mapping, which is a mechanism for automatically mapping all your entities based on a set of conventions.&lt;/p&gt;

&lt;p&gt;Auto mapping utilises the principal of &lt;a href=&quot;http://en.wikipedia.org/wiki/Convention_over_Configuration&quot;&gt;convention over configuration&lt;/a&gt;. Using this principal, the auto mapper inspects your entities and makes assumptions of what particular properties should be. Perhaps you have a property with the name of &lt;code class=&quot;highlighter-rouge&quot;&gt;Id&lt;/code&gt; and type of &lt;code class=&quot;highlighter-rouge&quot;&gt;int&lt;/code&gt;, the auto mapping might (and will by default) decide that this is an auto-incrementing primary key.&lt;/p&gt;

</description>
      <pubDate>Sat, 10 Jan 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-01-10T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>The VB OSS debarkle</title>
      <link>http://www.jagregory.com/writings/the-vb-oss-debarkle</link>
      <description>&lt;p&gt;Following a discussion last night between myself, several others, and Roy Osherove, which Jeremy Miller &lt;a href=&quot;http://codebetter.com/blogs/jeremy.miller/archive/2009/01/07/a-challenge-to-the-vb-net-community-at-large-on-oss.aspx&quot;&gt;also commented on&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The problem was incorrectly stated. There isn’t a lack of OSS projects that VB programmers can use, there’s a wealth of projects out there. &lt;em&gt;I’ve personally used IoC containers, ORM tools, unit testing tools, and build automation tools in VB with my most recent employer.&lt;/em&gt; The issue is that more recent projects are using some language features of C# that the VB team hasn’t chose to implement. This has got Roy all up in arms because he feels that should be our problem (as the OSS developers).&lt;/p&gt;

</description>
      <pubDate>Thu, 08 Jan 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-01-08T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Fluent NHibernate SubClass syntax changes</title>
      <link>http://www.jagregory.com/writings/fluent-nhibernate-subclass-syntax-changes</link>
      <description>&lt;p&gt;I’ve just committed a breaking change to &lt;a href=&quot;http://www.fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt; (as of &lt;a href=&quot;http://code.google.com/p/fluent-nhibernate/source/detail?r=184&quot; title=&quot;Revision 184&quot;&gt;r184&lt;/a&gt;), which I thought I’d document here for anyone interested; it’s a reworking of the subclass syntax.&lt;/p&gt;

&lt;p&gt;Mapping multiple subclasses with the same parent wasn’t a very fluent affair, and it was pretty &lt;em&gt;wordy&lt;/em&gt; too. You can see a comparison of the old and new syntaxes below.&lt;/p&gt;

</description>
      <pubDate>Mon, 05 Jan 2009 00:00:00 +1100</pubDate>
      <dc:date>2009-01-05T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Waiting for change</title>
      <link>http://www.jagregory.com/writings/waiting-for-change</link>
      <description>&lt;p&gt;We’ve all been in a job where “things are going to get better”, not just yet, but very soon. Perhaps you’re finally going to get a new product to work on, or that rewrite that’s well overdue, or a new development machine, or any number of other things.&lt;/p&gt;

&lt;p&gt;Assuming you’re actually bothered by the non-arrival of your desired improvement, it’s very important that you set a cut-off date for it to occur by. Not only that, you also should define what action you’re going to take when that date arrives; typically, that’d be “leave”.&lt;/p&gt;

</description>
      <pubDate>Wed, 26 Nov 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-11-26T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>A Tribute to Subversion</title>
      <link>http://www.jagregory.com/writings/a-tribute-to-subversion</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;Note: This is based on my personal experiences, and is not specifically “fact”. If your experiences differ, fine, but these are mine.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Subversion has started receiving some more flak in certain circles, it’s no longer in-vogue, no longer cool. Distributed version control is the big thing now, Git, Mecurial, Bazaar etc. Well I’m a huge Git fan, and I’m finding myself slowly transitioning away from Subversion project by project. However, I think I need to address something.&lt;/p&gt;

&lt;p&gt;Subversion radically changed how people perceive source control, certainly in the environments that I’ve introduced it into (primarily SourceSafe based). That’s no small feat, and I don’t think it should be forgotten amid all the hype around newer source control systems.&lt;/p&gt;

</description>
      <pubDate>Wed, 12 Nov 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-11-12T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>YaYAML: Yet another YAML parser</title>
      <link>http://www.jagregory.com/writings/yayaml-yet-another-yaml-parser</link>
      <description>&lt;p&gt;I don’t want to make much ceremony around this, but I thought I’d mention it incase anybody else is interested.&lt;/p&gt;

&lt;p&gt;As a part of a project I’m working on I needed a simple file to store some data in, and I didn’t want it to be XML (for no reason other than the verbosity). I could have used my own format, but instead I’ve gone for &lt;a href=&quot;http://yaml.net&quot;&gt;YAML&lt;/a&gt;. If you’ve worked with Ruby on Rails at all, then you’ll be familiar with YAML. It’s a human readable (and writable) text format.&lt;/p&gt;

&lt;p&gt;Of course, I still needed to be able to parse my YAML document. There was a project announced 2 years ago to create a .Net parser, but like many things, it seems very much abandoned. So, after my &lt;a href=&quot;/writings/getting-started-with-ometa/&quot;&gt;recent adventure with OMeta#&lt;/a&gt;, I thought I’d hack on this too.&lt;/p&gt;

</description>
      <pubDate>Tue, 28 Oct 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-10-28T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Getting started with OMeta#</title>
      <link>http://www.jagregory.com/writings/getting-started-with-ometa</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Notice:&lt;/strong&gt; I’m a novice at OMeta, and as such, you shouldn’t take my advice as best-practice. This is based on my exploratory findings.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;String parsing is hard. I don’t think anyone will deny that. You can parse it by hand, you can use regular expressions, you can walk it character by character. With &lt;a href=&quot;/writings/sharpdiff-diff-parsing-in-net/&quot;&gt;SharpDiff&lt;/a&gt;, I needed to parse some serious text, it was in an expected format, but there are numerous rules surrounding it. I did not fancy parsing it by hand, or with regular expressions.&lt;/p&gt;

&lt;p&gt;I considered writing a parser for it, but dismissed that after my dealings with &lt;a href=&quot;http://www.antlr.org&quot;&gt;ANTLR&lt;/a&gt; in &lt;a href=&quot;http://www.codeplex.com/BooLangStudio&quot;&gt;BooLangStudio&lt;/a&gt;. It’s not so much that ANTLR is bad, it’s just long winded; it’s completely &lt;a href=&quot;http://en.wikipedia.org/wiki/Visitor_pattern&quot;&gt;visitor&lt;/a&gt;tastic.&lt;/p&gt;

&lt;p&gt;Anyway, after 10 minutes down the path of parsing it myself, I cracked and decided to look into alternatives to ANTLR. I came across &lt;a href=&quot;http://www.codeplex.com/ometasharp&quot;&gt;OMeta#&lt;/a&gt; and (with a reassuring nudge by Jeffery Olson) I went with it.&lt;/p&gt;

</description>
      <pubDate>Wed, 22 Oct 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-10-22T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Smart Indentation for Visual Studio Extensibility projects</title>
      <link>http://www.jagregory.com/writings/smart-indentation-for-visual-studio-extensibility-projects</link>
      <description>&lt;p&gt;I said previously in my &lt;a href=&quot;/writings/brace-matching-and-your-language-service/&quot;&gt;Brace Matching post&lt;/a&gt; that I want to try to document some of my findings while working on &lt;a href=&quot;http://www.codeplex.com/BooLangStudio&quot;&gt;BooLangStudio&lt;/a&gt;. Well this is my second post on the subject.&lt;/p&gt;

&lt;p&gt;When you’re implementing a custom language in Visual Studio, there’s a very good chance that you’re going to want to handle indentation slightly differently to the defaults. Every language has it’s own rules, after all.&lt;/p&gt;

</description>
      <pubDate>Sun, 19 Oct 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-10-19T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>SharpDiff - Diff Parsing in .NET</title>
      <link>http://www.jagregory.com/writings/sharpdiff-diff-parsing-in-net</link>
      <description>&lt;p&gt;SharpDiff is a library for parsing the output of various diffing tools. It’s primary purpose is to reduce the time spent by SCM UI developers in handing diff output.&lt;/p&gt;

</description>
      <pubDate>Sun, 19 Oct 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-10-19T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Console colours wrapper</title>
      <link>http://www.jagregory.com/writings/console-colours-wrapper</link>
      <description>&lt;p&gt;Continuing on from my post about an &lt;a href=&quot;/writings/alternative-to-abusing-using/&quot;&gt;alternative syntax for the non-disposable using statements&lt;/a&gt;, here’s a class I’ve been using lately. It serves as a wrapper around changing the colours in a console window. It’s not a difficult thing to do, it’s just a bit awkward because you have to maintain the original colour in a variable while you do your business.&lt;/p&gt;

</description>
      <pubDate>Tue, 07 Oct 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-10-07T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Alternative to abusing using</title>
      <link>http://www.jagregory.com/writings/alternative-to-abusing-using</link>
      <description>&lt;p&gt;There’s been a bit of discussion of late about using statements, and how they’re more often being used for purposes other than just releasing resources. As always, there are those people who think it’s a flagrant abuse of a feature and shouldn’t be done, then there are those that like it. I’m in between. I do like what the using statement gives us, but I also think it is a bit of an abuse.&lt;/p&gt;

&lt;p&gt;The “traditional” usage of the using statement can be found quite often in the land of files and streams. Take the following example, which opens a file and then closes it when it drops out of the using scope.&lt;/p&gt;

</description>
      <pubDate>Tue, 07 Oct 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-10-07T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Empty NHibernate logs and poor performance</title>
      <link>http://www.jagregory.com/writings/empty-nhibernate-logs-and-poor-performance</link>
      <description>&lt;p&gt;We had an issue recently where NHibernate was performing very poorly on our production server, but not on our developer machines or our test server. I investigated the issue and narrowed it down to two symptoms.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Symptom 1:&lt;/strong&gt; Very poor performance. I’m talking 10+ seconds per page load, with no more than 5 queries being executed by NHibernate.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Symptom 2:&lt;/strong&gt; Empty log files. None of our log files had any data in on the live server, but they did on our other systems.&lt;/p&gt;

&lt;p&gt;I decided to investigate the second symptom first, as it may be causing the first (ends up it was).&lt;/p&gt;

</description>
      <pubDate>Fri, 12 Sep 2008 00:00:00 +1000</pubDate>
      <dc:date>2008-09-12T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Brace Matching and your Language Service</title>
      <link>http://www.jagregory.com/writings/brace-matching-and-your-language-service</link>
      <description>&lt;p&gt;I’ve been meaning to write up some of my experiences developing for Visual Studio while I’ve been working on &lt;a href=&quot;http://www.codeplex.com/BooLangStudio&quot;&gt;BooLangStudio&lt;/a&gt;, but I can never seem to find the time; either that, or when I can I’m not confident enough in what I’m doing to put it out here as a valid resource.&lt;/p&gt;

&lt;p&gt;I’ll start small, here’s a quick guide to how I’ve implemented brace matching using the managed Visual Studio extensibility SDK.&lt;/p&gt;

</description>
      <pubDate>Tue, 02 Sep 2008 00:00:00 +1000</pubDate>
      <dc:date>2008-09-02T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Time, time, time</title>
      <link>http://www.jagregory.com/writings/time-time-time</link>
      <description>&lt;p&gt;Time is a funny thing, a day can drag out and feel like an eternity, but a year can pass in a blink of an eye.&lt;/p&gt;

&lt;p&gt;I’m about 8,395 days old today, that’s roughly 201,480 rotations of the hour hand of your clock. Remember how long it takes for that hour hand to drip by while you’re in yet another boring meeting? I’ve had over 201 thousand of them.&lt;/p&gt;

&lt;p&gt;That all equates to 23 years old, which isn’t too bad I suppose.&lt;/p&gt;

</description>
      <pubDate>Thu, 14 Aug 2008 00:00:00 +1000</pubDate>
      <dc:date>2008-08-14T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Introducing Fluent NHibernate</title>
      <link>http://www.jagregory.com/writings/introducing-fluent-nhibernate</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;A couple of people have already covered this already, specifically &lt;a href=&quot;http://www.IAmNotMyself.com/2008/08/07/SkinningTheCatWithFluentNHibernate.aspx&quot;&gt;Bobby Johnson&lt;/a&gt;, &lt;a href=&quot;http://mhinze.com/fluent-nhibernate-project/&quot;&gt;Matt Hinze&lt;/a&gt;, and &lt;a href=&quot;http://zachariahyoung.com/zy/post/2008/08/fluent-nhibernate-for-creating-entity-mapping-files.aspx&quot;&gt;Zachariah Young&lt;/a&gt;. I figure I should say something on it anyway.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I’ve adopted a project from &lt;a href=&quot;http://codebetter.com/blogs/jeremy.miller/&quot;&gt;Jeremy Miller&lt;/a&gt; that I think has the potential to be a really useful tool. It’s called &lt;a href=&quot;http://www.fluentnhibernate.org&quot;&gt;Fluent NHibernate&lt;/a&gt;, and it’s primarily a fluent API for mapping classes with NHibernate.&lt;/p&gt;

&lt;p&gt;We’re all well aware how awesome NHibernate is, but I think we all also have a bit of a dislike for the amount of XML you need to write to get your classes mapped; not only that, but also how the mappings are distinctly separate from the rest of your application. They’re often neglected and untested. One of the core tenets of the project is that we need a more succinct, readable, and testable way of writing your mappings.&lt;/p&gt;

</description>
      <pubDate>Fri, 08 Aug 2008 00:00:00 +1000</pubDate>
      <dc:date>2008-08-08T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Latest on BooLangStudio</title>
      <link>http://www.jagregory.com/writings/latest-on-boolangstudio</link>
      <description>&lt;p&gt;It’s been a long time since I’ve written anything about &lt;a href=&quot;http://www.codeplex.com/BooLangStudio&quot;&gt;BooLangStudio&lt;/a&gt;. Let me assure you that the development is still very much underway, and we’re steadily working towards our first release.&lt;/p&gt;

&lt;p&gt;To fill you in a bit on what’s been going on. Jeffery Olson has completely rewritten the syntax highlighting to use the more flexible Boo.Pegs lexer, which allows us to overcome some of the obstacles we were facing with the traditional Boo lexer. There were limitations to what we could do with the traditional lexer, without modifying the Boo source. This was leading us down a road we weren’t keen on, one of maintaining a fork of the Boo source that contained our specific changes. With the move to the Boo.Pegs lexer, we’re free of this scenario!&lt;/p&gt;

</description>
      <pubDate>Thu, 07 Aug 2008 00:00:00 +1000</pubDate>
      <dc:date>2008-08-07T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Missed out on something big</title>
      <link>http://www.jagregory.com/writings/missed-out-on-something-big</link>
      <description>&lt;p&gt;Ever get the feeling that you’ve missed out on something big? I never got to see Star Wars at the cinema. I missed out on the start of computers, the ASM, the BASIC hacking and what-not. I discovered most of my musical taste way after the bands were gone or going, so I never got to see them in show.&lt;/p&gt;

&lt;p&gt;None of those are my fault, of course, because they were all before my time; in fact, most were at least a decade before me. That still doesn’t stop me from ocasionally getting the feeling that I missed out on something big.&lt;/p&gt;

&lt;p&gt;One more. One that’s pertinent to our industry: Smalltalk.&lt;/p&gt;

</description>
      <pubDate>Tue, 01 Jul 2008 00:00:00 +1000</pubDate>
      <dc:date>2008-07-01T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Boo Visual Studio plugin progress</title>
      <link>http://www.jagregory.com/writings/boo-visual-studio-plugin-progress</link>
      <description>&lt;p&gt;Quick update on the &lt;a href=&quot;/writings/boo-visual-studio-plug-in-1-complete/&quot;&gt;Boo plugin I mentioned previously&lt;/a&gt;. Jeff Olson announced the &lt;a href=&quot;http://www.codeplex.com/BooLangStudio&quot;&gt;BooLangStudio&lt;/a&gt; project a couple of days after I announced mine, and we’ve decided to join forces. I’ve begun merging our codebases, and we’re looking to get a release out in the not too distant future.&lt;/p&gt;

&lt;p&gt;Our combined code-bases have now got syntax highlighting, intellisense, single file and project support. Not bad going.&lt;/p&gt;

&lt;p&gt;We’ve now got a nice little team going as well, which is a big improvement from what was the one man band of my self. One of the contributors, &lt;a href=&quot;http://www.codinginstinct.com/2008/05/boo-in-visual-studio.html&quot;&gt;Torkel Ödegaard&lt;/a&gt;, has written a &lt;a href=&quot;http://www.codinginstinct.com/2008/05/boo-in-visual-studio.html&quot;&gt;nice overview&lt;/a&gt; of our progress and processes as-well.&lt;/p&gt;

</description>
      <pubDate>Sun, 25 May 2008 00:00:00 +1000</pubDate>
      <dc:date>2008-05-25T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Freeing the model from its evil web-service oppressors</title>
      <link>http://www.jagregory.com/writings/freeing-the-model-from-its-evil-web-service-oppressors</link>
      <description>&lt;p&gt;The current system I’m working with has a setup whereby the model (data access objects) are being used by the web-services for delivery; this means that the consumers of the web-services are directly tied to our inner implementation of our data access code. On-top of that, it’s old full of bad conventions, and is in need of refactoring.&lt;/p&gt;

</description>
      <pubDate>Sun, 18 May 2008 00:00:00 +1000</pubDate>
      <dc:date>2008-05-18T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Boo Visual Studio plug-in: 1% complete</title>
      <link>http://www.jagregory.com/writings/boo-visual-studio-plug-in-1-complete</link>
      <description>&lt;p&gt;What do we want? &lt;em&gt;A Boo plug-in for Visual Studio&lt;/em&gt;. When do we want it? &lt;em&gt;Sooner, rather than later&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The initial aim of this plug-in is to provide a “good enough” experience when using Boo files within other projects. I’m not currently focussing on doing full-scale development with Boo; so the target is DSLs and Binsor. There won’t be any assemblies created, or anything else that would affect your project. The only difference between how you work now would be that you could write Boo using Visual Studio, with syntax highlighting and intellisense.&lt;/p&gt;

&lt;p&gt;That’s for the initial version anyway.&lt;/p&gt;

</description>
      <pubDate>Sun, 18 May 2008 00:00:00 +1000</pubDate>
      <dc:date>2008-05-18T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Plugin baby steps</title>
      <link>http://www.jagregory.com/writings/plugin-baby-steps</link>
      <description>&lt;p&gt;Making a Visual Studio 2008 plugin isn’t as hard as it sounds.&lt;/p&gt;

&lt;p&gt;Making one that works is a bit more difficult.&lt;/p&gt;

&lt;p&gt;Syntax highlighting is fairly straight forward, just run a tokenizer over the text and colour code each token appropriately. It’s the code sense that is causing me to go slightly mad. To determine what methods need to be listed when the intellisense pops up, you need to parse the code that’s in the document, then resolve any classes and references in there to build up a collection of methods to display. It gets more tricky when the document isn’t valid, because you can’t compile it. That’s where I am now, I need to figure out some way of partially compiling the document, or maybe using an AST walker.&lt;/p&gt;

</description>
      <pubDate>Mon, 12 May 2008 00:00:00 +1000</pubDate>
      <dc:date>2008-05-12T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Futility: Transforming entities into DTOs</title>
      <link>http://www.jagregory.com/writings/futility-transforming-entities-into-dtos</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;Future James: This is pretty much describing &lt;a href=&quot;http://automapper.codeplex.com/&quot;&gt;AutoMapper&lt;/a&gt;, just take a look at that instead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I quite dislike mapping DTOs to entities, it’s a pain, but mostly tedious and tiresome rather than difficult. I decided to try to ease things by creating a library that would resolve entity instances to their DTO counterparts.&lt;/p&gt;

&lt;p&gt;My requirements were few but I was determined not to violate any of them.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Refactoring friendly. No strings for property names, changing names should give compiler errors.&lt;/li&gt;
  &lt;li&gt;Must simplify code.&lt;/li&gt;
  &lt;li&gt;Must improve maintainability.&lt;/li&gt;
&lt;/ol&gt;

</description>
      <pubDate>Tue, 06 May 2008 00:00:00 +1000</pubDate>
      <dc:date>2008-05-06T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>All about dependencies</title>
      <link>http://www.jagregory.com/writings/all-about-dependencies</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;This article serves as an introduction to the concept of &lt;a href=&quot;http://martinfowler.com/articles/injection.html&quot;&gt;Dependency Injection&lt;/a&gt;, and why you’d want to use it. It is not a getting started guide for using containers. If you’re interested in those, my personal preference is &lt;a href=&quot;http://www.castleproject.org/container/&quot;&gt;Castle Windsor&lt;/a&gt; and you can find their &lt;a href=&quot;http://www.castleproject.org/container/gettingstarted/index.html&quot;&gt;getting started guide here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;What are dependencies? Also referred to as couplings, dependencies are other modules that one module requires to fulfil it’s purpose.&lt;/p&gt;

&lt;p&gt;Are dependencies bad? No, of course they’re not, otherwise we wouldn’t be able to create anything. However, highly coupled code can cause a lot of problems for your application.&lt;/p&gt;

&lt;p&gt;If your code requires knowledge of how a dependency works, then your code is highly coupled. If your code is tied explicitly to an implementation, then your code is also highly coupled.&lt;/p&gt;

</description>
      <pubDate>Sat, 05 Apr 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-04-05T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Static method abuse</title>
      <link>http://www.jagregory.com/writings/static-method-abuse</link>
      <description>&lt;p&gt;I dislike static methods, there I said it.&lt;/p&gt;

&lt;p&gt;Like everything, they have their place; but as the old analogy says, when you have a hammer everything looks like a nail. &lt;strong&gt;Static methods are being abused.&lt;/strong&gt;&lt;/p&gt;

</description>
      <pubDate>Fri, 28 Mar 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-03-28T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Plug-in's and browsers</title>
      <link>http://www.jagregory.com/writings/plug-ins-and-browsers</link>
      <description>&lt;p&gt;Jeff Atwood (of &lt;a href=&quot;http://www.codinghorror.com&quot;&gt;Coding Horror&lt;/a&gt;) &lt;a href=&quot;http://twitter.com/codinghorror/statuses/778279263&quot;&gt;tweeted earlier&lt;/a&gt;: “On Firefox: ‘add-ons aren’t a big draw for me – I just need a browser, not a circus.’”. I don’t know whether this was a quotation of himself, or someone else; but it’s something that I’ve heard mentioned before.&lt;/p&gt;

&lt;p&gt;Just because they’re there, doesn’t mean you have to install them.&lt;/p&gt;

</description>
      <pubDate>Fri, 28 Mar 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-03-28T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>getfilename NAnt task</title>
      <link>http://www.jagregory.com/writings/getfilename-nant-task</link>
      <description>&lt;p&gt;As part of my current quest to fully automate our build, I found my self needing the ability to copy a database backup from our remote server. The backup is in a folder along with several other backups, with a filename based on the date. I didn’t fancy trying to programmatically guess the filename, so I wrote an NAnt task to grab the newest file in a directory. Thanks to &lt;a href=&quot;http://blogs.geekdojo.net/rcase&quot;&gt;Richard Case&lt;/a&gt; for his overview of how to &lt;a href=&quot;http://blogs.geekdojo.net/rcase/archive/2005/01/06/5971.aspx&quot;&gt;create a custom NAnt task&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;getfilename&lt;/code&gt; task simply gets the filename of a file in a directory, then pushes the name into the specified property. The filename to find can be based on the creation date, last modified date etc…&lt;/p&gt;

</description>
      <pubDate>Wed, 12 Mar 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-03-12T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Introducing the filterable DeleGrid</title>
      <link>http://www.jagregory.com/writings/introducing-the-filterable-delegrid</link>
      <description>&lt;p&gt;The DeleGrid is a paged GridView control that handles data-binding through the use of events and delegates rather than with a traditional collection.&lt;/p&gt;

&lt;p&gt;What this means is that you have full control over the data that is shown in the currently displayed page. Traditionally you’d retrieve the whole recordset then page it locally, but with the DeleGrid you can utilise your database/ORMs paging features.&lt;/p&gt;

</description>
      <pubDate>Wed, 05 Mar 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-03-05T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>ObjectField 1.1</title>
      <link>http://www.jagregory.com/writings/objectfield-11</link>
      <description>&lt;p&gt;I’ve updated the &lt;code class=&quot;highlighter-rouge&quot;&gt;ObjectField&lt;/code&gt; to be considerably simpler than it was before. While writing my &lt;a href=&quot;/writings/data-binding-hierarchical-objects/&quot;&gt;Data-binding hierarchical objects&lt;/a&gt; post I wrote this about the &lt;code class=&quot;highlighter-rouge&quot;&gt;BoundField&lt;/code&gt; implementation:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Using a &lt;code class=&quot;highlighter-rouge&quot;&gt;TypeDescriptor&lt;/code&gt; to get the property… This strikes me as a bit odd to be honest, because the &lt;code class=&quot;highlighter-rouge&quot;&gt;DataBinder&lt;/code&gt; has the ability to evaluate a hierarchical path.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Which is interesting, because I was using a &lt;code class=&quot;highlighter-rouge&quot;&gt;TypeDescriptor&lt;/code&gt; in my &lt;code class=&quot;highlighter-rouge&quot;&gt;ObjectField&lt;/code&gt; implementation!&lt;/p&gt;

</description>
      <pubDate>Thu, 21 Feb 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-02-21T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Data-binding hierarchical objects</title>
      <link>http://www.jagregory.com/writings/data-binding-hierarchical-objects</link>
      <description>&lt;p&gt;After my post about &lt;a href=&quot;/writings/objectfield/&quot;&gt;my ObjectField column&lt;/a&gt;, I thought I’d elaborate a bit on why it’s necessary.&lt;/p&gt;

&lt;p&gt;When you’re data binding against an object that isn’t flat (i.e. has properties that are more than simple types - namely classes), you are bound to encounter the following exception, which is caused by the &lt;code class=&quot;highlighter-rouge&quot;&gt;BoundField&lt;/code&gt; incorrectly handling a hierarchical object path.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A field or property with the name &lt;code class=&quot;highlighter-rouge&quot;&gt;MySubObject.PropertyName&lt;/code&gt; was not found on the selected data source.&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <pubDate>Thu, 21 Feb 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-02-21T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>ObjectField - A GridView field</title>
      <link>http://www.jagregory.com/writings/objectfield</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;The version of the ObjectField that this post refers to is now out of date. Please go to the &lt;a href=&quot;/writings/objectfield-11/&quot;&gt;ObjectField 1.1&lt;/a&gt; post for the latest version.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I encountered a problem while binding a complex object to a GridView, in that the BoundField doesn’t support specifying a nested value in it’s DataField property. So if you have a list of Customer’s, and want to display the TelephoneNumber property from inside the customer’s ContactDetails property, you’re out of luck.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;asp:BoundField&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;DataField=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ContactDetails.TelephoneNumber&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above would fall over with an exception along the lines of:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;A field or property with the name 'ContactDetails.TelephoneNumber' was not found on the selected data source.&lt;/code&gt;&lt;/p&gt;

</description>
      <pubDate>Sun, 17 Feb 2008 00:00:00 +1100</pubDate>
      <dc:date>2008-02-17T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>NHibernate and the SqlTypeException</title>
      <link>http://www.jagregory.com/writings/nhibernate-and-the-sqltypeexception</link>
      <description>&lt;p&gt;&lt;a href=&quot;http://www.nhibernate.org&quot;&gt;NHibernate&lt;/a&gt; is a wonderful piece of technology, I love it probably more than is reasonable for code. It does however, occasionally scare you with some seemingly odd behavior. I say seemingly, because every time I’ve had trouble it’s actually ended up being my own fault. &lt;em&gt;This is one of those times.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Picture a simple page, with a &lt;a href=&quot;/writings/delegrid/&quot;&gt;DeleGrid&lt;/a&gt; control, being bound using NHiberate. Baring in mind how the DeleGrid works, two queries were being executed, one to return the first page of data and another to get the total row-count for the grid. &lt;em&gt;These queries were identical apart from the paging in one, and the projection in the other.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Upon execution of the second query, NHibernate was throwing a &lt;code class=&quot;highlighter-rouge&quot;&gt;SqlTypeException&lt;/code&gt; for a &lt;code class=&quot;highlighter-rouge&quot;&gt;SqlDateTime&lt;/code&gt; overflow. &lt;code class=&quot;highlighter-rouge&quot;&gt;SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM&lt;/code&gt;. This was pretty bizarre. Why on earth would the first query succeed (and bring back records, fully populated), but the same query again would die.&lt;/p&gt;

&lt;p&gt;A good place to start for NHibernate debugging is always the logs, so I delved in. I discovered NHibernate was attempting to execute an update statement just before it tried the second query. It just kept getting stranger, why would a straightforward query cause an update?&lt;/p&gt;

&lt;p&gt;I thought i’d investigate why the update statement was failing first, then I’d tackle the problem of why it was even updating at all. Looking at the query I identified the column that was causing the exception, it was (as expected) a &lt;code class=&quot;highlighter-rouge&quot;&gt;DateTime&lt;/code&gt; column that was trying to be set to &lt;code class=&quot;highlighter-rouge&quot;&gt;DateTime.MinValue&lt;/code&gt;. This exception is thrown because .Net and SQL Server have different ideas over what the minimum value for a &lt;code class=&quot;highlighter-rouge&quot;&gt;DateTime&lt;/code&gt; should be.&lt;/p&gt;

&lt;p&gt;Now, why would this column be being set at all? Well, it ends up that the column in the database was nullable, but the property in the object wasn’t. So because &lt;code class=&quot;highlighter-rouge&quot;&gt;DateTime&lt;/code&gt; is a value type and cannot be set to &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt;, NHibernate was populating it with the closest value to &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; as it could manage.&lt;/p&gt;

&lt;p&gt;That was the key, as soon as I had that realisation, it was obvious what the problem was.&lt;/p&gt;

&lt;p&gt;NHibernate knew that the database had a nullable column, but it had to manage with the non-nullable field on the object. When it came to run the second query, it noticed that the property wasn’t null as the mapping file said it should be, so it determined the value must have changed. It then attempted to persist those changes before executing the query!&lt;/p&gt;

&lt;h2 id=&quot;to-break-it-down&quot;&gt;To break it down&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Nullable column pulled into a non-nullable field forces NHibernate to create the smallest value it can.&lt;/li&gt;
  &lt;li&gt;NHibernate then checks for any changes, expecting a &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt; on that field but finding a value.&lt;/li&gt;
  &lt;li&gt;Object now considered dirty because value has allegedly changed.&lt;/li&gt;
  &lt;li&gt;NHibernate performs an update before it pulls back the data agian.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So the fix was simply to make the &lt;code class=&quot;highlighter-rouge&quot;&gt;DateTime&lt;/code&gt; in the object a &lt;code class=&quot;highlighter-rouge&quot;&gt;DateTime?&lt;/code&gt;, a nullable &lt;code class=&quot;highlighter-rouge&quot;&gt;DateTime&lt;/code&gt;. That got rid of the false update, and fixed my queries. Simple when you know what the problem is.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So the moral of the story is:&lt;/strong&gt; Make sure everything is in sync - schema, mappings and POCOs.&lt;/p&gt;

</description>
      <pubDate>Tue, 18 Dec 2007 00:00:00 +1100</pubDate>
      <dc:date>2007-12-18T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Percieved value and developer education</title>
      <link>http://www.jagregory.com/writings/percieved-value-and-developer-education</link>
      <description>&lt;p&gt;A &lt;a href=&quot;http://codebetter.com/blogs/jeremy.miller/archive/2007/12/12/my-pick-for-altnetconf-quote-of-the-day.aspx#171928&quot;&gt;comment&lt;/a&gt; on a &lt;a href=&quot;http://codebetter.com/blogs/jeremy.miller/archive/2007/12/12/my-pick-for-altnetconf-quote-of-the-day.aspx&quot;&gt;post at Jeremy D. Miller’s blog&lt;/a&gt; caught my eye. To paraphrase, Jeff Tucker says that part of the problem of the lack of perceived value of ORM/TDD/IOC etc is down to the developers in question not having experienced the reason these tools exist.&lt;/p&gt;

</description>
      <pubDate>Wed, 12 Dec 2007 00:00:00 +1100</pubDate>
      <dc:date>2007-12-12T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>On testing implementation</title>
      <link>http://www.jagregory.com/writings/on-testing-implementation</link>
      <description>&lt;p&gt;I’ve found my-self in the situation of retro-fitting a library of code with unit tests, not a good situation to be in. However, what’s more concerning is I’ve just caught my-self writing tests that are heavily testing the implementation of a method; rather than simply testing if the method does what it’s supposed to.&lt;/p&gt;

&lt;p&gt;There are a few problems with falling into this trap. Firstly, it’s very brittle. Secondly, you shouldn’t be concerned with the internals. Thirdly, it’s very time consuming.&lt;/p&gt;

</description>
      <pubDate>Mon, 10 Dec 2007 00:00:00 +1100</pubDate>
      <dc:date>2007-12-10T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>DeleGrid - a paged GridView control</title>
      <link>http://www.jagregory.com/writings/delegrid</link>
      <description>&lt;p&gt;The DeleGrid is a control derived from the ASP.Net GridView, that delegates its data retrieval back out of the control. This allows the developer full control over the records that are retrieved, thus allowing proper paging to be implemented using whatever collection type you prefer.&lt;/p&gt;

</description>
      <pubDate>Sun, 09 Dec 2007 00:00:00 +1100</pubDate>
      <dc:date>2007-12-09T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Test-drive properly, test fully</title>
      <link>http://www.jagregory.com/writings/test-drive-properly-test-fully</link>
      <description>&lt;p&gt;I started writing this as a comment, but I felt it’s own post was deserved.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://rickyclarkson.blogspot.com/&quot;&gt;Ricky Clarkson&lt;/a&gt; left me a link in a comment to one of &lt;a href=&quot;http://rickyclarkson.blogspot.com/2007/05/you-dont-need-tdd-you-need-repl.html&quot;&gt;his posts&lt;/a&gt; that ties in quite nicely to my recent &lt;a href=&quot;http://blog.jagregory.com/2007/07/17/getting-with-it-test-driven-development/&quot;&gt;Getting with it: Test Driven Development&lt;/a&gt; post.&lt;/p&gt;

&lt;p&gt;Ricky makes the point that TDD can be dangerous, and can lull you into a false sense of security. &lt;em&gt;I agree.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As with any technology, when used incorrectly it can cause more damage than not using it at all.&lt;/p&gt;

&lt;p&gt;Ricky’s example should serve as a double-barreled warning. You can’t be test-driven only when it’s convenient, and you need to have good test coverage.&lt;/p&gt;

</description>
      <pubDate>Sat, 21 Jul 2007 00:00:00 +1000</pubDate>
      <dc:date>2007-07-21T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Applying a bit of XP to hobby projects</title>
      <link>http://www.jagregory.com/writings/applying-a-bit-of-xp-to-hobby-projects</link>
      <description>&lt;p&gt;Hobby projects, everybody has one or two on the go. They’re fun little side-steps from the mundane routine of developing for a living. These projects usually get a fair bit of thought put into them, but precious little time–an unfortunate side-effect of having a life outside work.&lt;/p&gt;

&lt;p&gt;We’re all used to working within limited time-frames, but the limitations are much more noticeable when you only have a few hours on a Sunday afternoon. This time is precious, but unfortunately we often find ourselves spending the time doing much less than we would like. That might be because you’ve hit a design aspect you can’t solve yet, or more often because your time is spent flitting between tasks. This lack of visible progress has a demoralising effect, next time you get some free time you may be less inclined to spend it on your project because you know you’ll not make much headway.&lt;/p&gt;

</description>
      <pubDate>Wed, 18 Jul 2007 00:00:00 +1000</pubDate>
      <dc:date>2007-07-18T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Getting with it: Test-Driven Development</title>
      <link>http://www.jagregory.com/writings/getting-with-it-test-driven-development</link>
      <description>&lt;p&gt;Test-driven development is a practice that has started to make some serious headway into the average developer world of .Net. The tools have reached a stage of maturity where they offer solutions to most (if not all) aspects of test-driven development. Alongside the improved tools there has been a dramatic increase in the quantity and quality of articles addressing the needs of new and established test-driven developers. The combined effect of this is of a reduced learning curve for the average developer.&lt;/p&gt;

</description>
      <pubDate>Tue, 17 Jul 2007 00:00:00 +1000</pubDate>
      <dc:date>2007-07-17T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>A usability moan about Adobe's website</title>
      <link>http://www.jagregory.com/writings/a-usability-moan-about-adobes-website</link>
      <description>&lt;p&gt;When recently performing a system-wide clean-out, I removed a long-expired Macromedia Flash 8 Studio trial. Unknown to me at the time, it had taken it upon itself to remove the flash player as-well; because, of course, now that I don’t want to develop flash, I’ll never need it again!&lt;/p&gt;

&lt;p&gt;Anyway, a week or so later I discovered that I needed to re-install the player, so off I went to &lt;a href=&quot;http://www.adobe.com&quot;&gt;Adobe’s Website&lt;/a&gt;. When I arrived, I was presented with a fairly reasonable page - in terms of design - but there was something on there that epitomises the lack of thought that goes into usability on the web. People, you have to remember it isn’t just about how you create your links (bad “click here”, no play-time for you!), it’s also about how your content is worded.&lt;/p&gt;

</description>
      <pubDate>Sat, 01 Jul 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-07-01T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Your Forms Are Killing Me</title>
      <link>http://www.jagregory.com/writings/your-forms-are-killing-me</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;Note: I have no particular dislike of the website in question, in fact I read it on a regular basis, but what I’m about to talk about is a travesty. Although it does tie in rather nicely with a previous post of mine: &lt;a href=&quot;/writings/bloated-forms&quot;&gt;Bloated Forms&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I was browsing one of my regular watering holes (water of knowledge, of course!) - &lt;a href=&quot;http://www.theserverside.net&quot;&gt;The Server Side.Net&lt;/a&gt; - and I felt the overwhelming urge to make a reply in the forum. Registration was required, of course, so off to register I went. What followed was purely horrible on so many levels.&lt;/p&gt;

</description>
      <pubDate>Thu, 29 Jun 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-06-29T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Using Internet Explorer's conditional comments for targeted JavaScript</title>
      <link>http://www.jagregory.com/writings/using-ies-conditional-comments-for-targeted-javascript</link>
      <description>&lt;p&gt;The &lt;a href=&quot;http://blogs.msdn.com/ie/archive/2005/10/12/480242.aspx&quot;&gt;demise of CSS hacks&lt;/a&gt;, something which has been covered elsewhere to no end, definitely a good thing, but not what I’m covering here - not directly anyway. I’ve been wondering if we can take advantage of this new age of “hack segregation”.&lt;/p&gt;

&lt;p&gt;The way I see it is we’re already breaking the rule of separation by using conditional comments in the structure, so why don’t we cease this opportunity to save our friends (users of Firefox, Safari, Opera etc…) some bandwidth by providing IE specific JavaScript in the same way too?&lt;/p&gt;

</description>
      <pubDate>Thu, 15 Jun 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-06-15T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Bloated forms</title>
      <link>http://www.jagregory.com/writings/bloated-forms</link>
      <description>&lt;p&gt;I don’t know what it is, but there seems to be an inherent urge of web developers (or designers, managers or whomever) to create forms that are hugely bloated and pointless, even for simple things such as sending a contact e-mail.&lt;/p&gt;

&lt;p&gt;This fascination with bloated forms is incomprehensible to me, I just can’t understand why anybody would want to know the gender or official title of somebody who’s simply trying to say “Hello”; it’s irrelevant, all I personally care about is what they’ve got to say. Is it supposed to portray the company in an intelligent, professional manner? (&lt;em&gt;These people want my title, they obviously mean business!&lt;/em&gt;) I don’t know, but it needs to stop.&lt;/p&gt;

</description>
      <pubDate>Thu, 15 Jun 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-06-15T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Amusing &quot;Recommend a Friend&quot; usage</title>
      <link>http://www.jagregory.com/writings/amusing-quotrecommend-a-friendquot-usage</link>
      <description>&lt;p&gt;We’ve been sending out a (rather successful) e-mail campaign for &lt;a href=&quot;http://www.swiftleisure.co.uk&quot;&gt;Swift&lt;/a&gt; over the past few days, a good experience and definitely an eye opener. Something that amused me over the course of the project was the way people were using the “Recommend a Friend” feature of the e-mail.&lt;/p&gt;

&lt;p&gt;If you’re presented by a form, which asks for your friends name, e-mail address and some form of comment from yourself, what would you put in the name field? Common sense says that you should put their full name in, as generally that’s what people want; not these people though! Over 50% of the recommendations were supplied with first names only or nicknames - the most wonderful being “MUM”; yes, block capitals too.&lt;/p&gt;

&lt;p&gt;So we have a nice collection of recommendations along the lines of:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;George&lt;/li&gt;
  &lt;li&gt;Sally&lt;/li&gt;
  &lt;li&gt;Geoff&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;liz&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;MUM&lt;br /&gt;
How very helpful.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They’ll love the targeted e-mails they’re bound to receive too; “Dear MUM, we think…”.&lt;/p&gt;

</description>
      <pubDate>Thu, 15 Jun 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-06-15T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>SQL Server Object Exists Function</title>
      <link>http://www.jagregory.com/writings/sql-server-object-exists-function</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Update:&lt;/strong&gt; Added separate versions for SQL Server 2000 and SQL Server 2005, due to the differences in the system objects tables.It may just be me, but when writing migration/create scripts for use with SQL Server I get quite agitated at having to write an ugly, long-winded, drop statement at the start of every object definition.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The support for dropping objects is one of the few things I would say MySQL has SQL Server over the barrel for.Baring in mind that if you try to drop an object that doesn’t exist, you’ll get an execution error; here’s how to drop a table in MySQL:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here’s how to drop the same table, if you’re using SQL Server:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OBJECT_ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OBJECT_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'customers'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'U'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customers&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
      <pubDate>Fri, 26 May 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-05-26T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>JavaScript Console in Safari</title>
      <link>http://www.jagregory.com/writings/javascript-console-in-safari</link>
      <description>&lt;p&gt;Just a quick tip to enable the Debug menu in Safari, the main reason being to get the JavaScript Console (ala Firefox).&lt;/p&gt;

&lt;p&gt;Simply close down your open instances of Safari and enter this into the Terminal:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults write com.apple.Safari IncludeDebugMenu 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That’ll enable a new Debug menu next time you start Safari, simple as that. I was on the verge of loading up Firefox on the Mac&lt;br /&gt;
before I came across this, bad James!&lt;/p&gt;

&lt;p&gt;Also, just in-case, running the above again with 0 will turn off the menu.&lt;/p&gt;

</description>
      <pubDate>Mon, 15 May 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-05-15T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Ruby on Rails Recognition Failed in Production mode</title>
      <link>http://www.jagregory.com/writings/ruby-on-rails-recognition-failed-in-production-mode</link>
      <description>&lt;p&gt;The title pretty much covers it, but i’ll elaborate.&lt;/p&gt;

&lt;p&gt;A few days ago I decided it was about time I had a tinker with &lt;a href=&quot;http://www.google.com/webmasters/sitemaps&quot;&gt;Google Sitemaps&lt;/a&gt;, part of which involves uploading a temporary file so google can be sure the website you’re trying to claim is actually yours. Anyway, fun things aside, google gave me an error message (“We’ve detected that your 404 (file not found) error page returns a status of 200 (OK) in the header.”) when it tried to read the file.&lt;/p&gt;

</description>
      <pubDate>Sat, 29 Apr 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-04-29T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Uncrippling Windows XP's IIS 5.1</title>
      <link>http://www.jagregory.com/writings/uncrippling-windows-xps-iis-51</link>
      <description>&lt;p&gt;I apparently got around to reading &lt;a href=&quot;http://www.codinghorror.com&quot;&gt;Coding Horror&lt;/a&gt; a bit too late, as I missed &lt;a href=&quot;http://www.codinghorror.com/blog/archives/000329.html&amp;quot; title=&amp;quot;Uncrippling Windows XP's IIS 5.1&quot;&gt;this gem&lt;/a&gt;. It’s an article about a small application used to bend XP’s IIS to your every whim, perfect for those of us suffering at the hands of Microsoft.&lt;/p&gt;

&lt;p&gt;The basic gist of the application is that it removes the limits of XP’s IIS, namely the problem of only being allowed one website and 10 concurrent users. It takes a bit of getting used to, especially if you’re using Visual Studio; if you are, remember to reset IIS to it’s default website before opening a website created prior to using IISAdmin.&lt;/p&gt;

</description>
      <pubDate>Wed, 26 Apr 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-04-26T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>ServerControlIDs Update</title>
      <link>http://www.jagregory.com/writings/servercontrolids-update</link>
      <description>&lt;p&gt;I’ve created a small update for my ServerControlIDs control, which removes the problem caused by controls within Repeaters and DataGrid.&lt;/p&gt;

&lt;p&gt;If you had a repeater that for each item contained an Hyperlink control, you’d get a duplicate entry in the ClientIDs object for every record, to avoid this problem I simply don’t output any sub-controls from within repeater style objects.&lt;/p&gt;

&lt;p&gt;That may sound like a bit of a hack, maybe it is, but if you want to refer to multiple elements within another, you shouldn’t really be doing it by ID anyway.&lt;/p&gt;

&lt;p&gt;You can get the &lt;a href=&quot;/downloads/ServerControlIDs-1.1.zip&quot;&gt;updated source here&lt;/a&gt; or view the &lt;a href=&quot;/writings/how-to-use-clientids-in-javascript-without-the-ugliness/&quot;&gt;full article here&lt;/a&gt;.&lt;/p&gt;

</description>
      <pubDate>Wed, 26 Apr 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-04-26T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>The problem with onload</title>
      <link>http://www.jagregory.com/writings/the-problem-with-onload</link>
      <description>&lt;p&gt;Handling events from within your page has always been a hit and miss affair, especially for somebody who doesn’t like mixing their code and markup. The way to go with events for a long time was to embed an attribute on the element in question; like &lt;code class=&quot;highlighter-rouge&quot;&gt;onclick=&quot;do_something()&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That works fine, but we sure know it isn’t semantic. The way forward — greatly popularised by the &lt;a href=&quot;http://prototype.conio.net&quot;&gt;Prototype&lt;/a&gt;, &lt;a href=&quot;http://dojotoolkit.org/&quot;&gt;Dojo&lt;/a&gt; and &lt;a href=&quot;http://bennolan.com/behaviour/&quot;&gt;Behaviour&lt;/a&gt; libraries — is to use DOM compliant event listeners. These fire arbitrary code, in a very similar way to attributes, when an event is raised. Unlike attributes these event listeners can be hidden away in their rightful place, the document header.&lt;/p&gt;

&lt;p&gt;Perfect - clean semantic markup and real event handling.&lt;/p&gt;

&lt;p&gt;…or is it? Unfortunately nothing is ever smooth when dealing with standards (it’s hard to promote the underdog when the underdog barely works anyway…).&lt;/p&gt;

</description>
      <pubDate>Wed, 12 Apr 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-04-12T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>How-to use ClientIDs in JavaScript without the ugliness</title>
      <link>http://www.jagregory.com/writings/how-to-use-clientids-in-javascript-without-the-ugliness</link>
      <description>&lt;p&gt;ASP.Net has an interesting way of handing the potential ID conflicts caused by embedding third-party controls within your web-page; it prefixes any sub-controls with their parent’s ID.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;asp:TextBox ID=&quot;txtUsername&quot; Runat=&quot;server&quot; /&amp;gt;&lt;/code&gt; within a standard page simply has an ID of &lt;code class=&quot;highlighter-rouge&quot;&gt;txtUsername&lt;/code&gt; within the HTML output. On the other hand, the following example would result in something along the lines of &lt;code class=&quot;highlighter-rouge&quot;&gt;_parent_txtUsername&lt;/code&gt; as the ID:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;parent&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;runat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;server&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;asp:TextBox&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ID=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;txtUsername&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;Runat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;server&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This isn’t really much of a problem when all you are working with is server-side code, but when you start tinkering with JavaScript, things become quite annoying and get an overall feeling of hackiness.&lt;/p&gt;

</description>
      <pubDate>Wed, 12 Apr 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-04-12T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Hello from JAGregory.com!</title>
      <link>http://www.jagregory.com/writings/hello-from-jagregorycom</link>
      <description>&lt;p&gt;You should now be receiving this syndicated content from my new(ish) website &lt;a href=&quot;http://www.jagregory.com&quot;&gt;http://www.jagregory.com&lt;/a&gt;. I’ve finally moved away from the .Text powered blogging system I’ve been using for the past few years in favour of Typo, a Ruby on Rails system.&lt;/p&gt;

&lt;p&gt;I have a few reasons for doing this but the main one is that my blog as well as my personal website both validate to &lt;acronym title=&quot;Extensible Hypertext Markup Language&quot;&gt;XHTML&lt;/acronym&gt; 1.0. On top of that, with the dynamic nature of Ruby on Rails, I can make changes to the layouts without having to recompile.&lt;/p&gt;

&lt;p&gt;Please drop me a line if you spot anything out of place.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Future James: Isn’t this cute?&lt;/p&gt;
&lt;/blockquote&gt;

</description>
      <pubDate>Tue, 04 Apr 2006 00:00:00 +1000</pubDate>
      <dc:date>2006-04-04T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>JavaScript Behaviour &amp; getElementsBySelector() mini-fix</title>
      <link>http://www.jagregory.com/writings/javascript-behaviour-amp-getelementsbyselector-mini-fix</link>
      <description>&lt;p&gt;&lt;a href=&quot;http://bennolan.com/behaviour/&quot;&gt;Behaviour&lt;/a&gt;, great bit of JavaScript!&lt;/p&gt;

&lt;p&gt;While using it lately I came across a small bug in the code it’s based-on, &lt;a href=&quot;http://simon.incutio.com/&quot;&gt;Simon Willison&lt;/a&gt;’s &lt;a href=&quot;http://simon.incutio.com/archive/2003/03/25/getElementsBySelector&quot;&gt;getElementsBySelector()&lt;/a&gt;, when you use a selector that references an invalid ID paired with a tag name (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;body#profile&lt;/code&gt;, when &lt;code class=&quot;highlighter-rouge&quot;&gt;#profile&lt;/code&gt; doesn’t exist), a script error occurs; yet using &lt;code class=&quot;highlighter-rouge&quot;&gt;#profile&lt;/code&gt; alone works fine.&lt;/p&gt;

&lt;p&gt;After a little bit of digging I found a solution, the source of the error is line 89:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tagName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nodeName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
      <pubDate>Fri, 24 Mar 2006 00:00:00 +1100</pubDate>
      <dc:date>2006-03-24T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Accessibility for UK based websites</title>
      <link>http://www.jagregory.com/writings/accessibility-for-uk-based-websites</link>
      <description>&lt;p&gt;As reported by &lt;a href=&quot;http://news.bbc.co.uk/&quot;&gt;BBC News&lt;/a&gt;, a new set of &lt;a href=&quot;http://news.bbc.co.uk/1/hi/technology/4783686.stm&quot;&gt;accessibility guidelines&lt;/a&gt; have been developed for UK websites.&lt;/p&gt;

&lt;p&gt;Although this certainly isn’t anything new — being as a law was passed in 1999 for compliance — and it isn’t even legally binding, it may be used in court if a case arises. This is just one more little pebble added to the mounting landslide that will occur when a disabled user finally does the american thing and sues a company for not providing sufficient means to access their website.&lt;/p&gt;

</description>
      <pubDate>Wed, 08 Mar 2006 00:00:00 +1100</pubDate>
      <dc:date>2006-03-08T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Trust Wireless Scroll Tablet with Dual Monitors</title>
      <link>http://www.jagregory.com/writings/trust-wireless-scroll-tablet-ampamp-dual-monitors</link>
      <description>&lt;p&gt;This was a task and a half! As I mentioned earlier I somehow managed to get my &lt;a href=&quot;http://www.amazon.co.uk/exec/obidos/ASIN/B0002DCL6G/202-4350795-3732661&quot;&gt;Trust Wireless Scroll Tablet&lt;/a&gt; working on a dual monitor system, mapped to only the primary monitor; so here’s my little guide on how I managed it.&lt;/p&gt;

</description>
      <pubDate>Tue, 07 Mar 2006 00:00:00 +1100</pubDate>
      <dc:date>2006-03-07T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Personal Note: A brief interlude</title>
      <link>http://www.jagregory.com/writings/just-so-you-know</link>
      <description>&lt;p&gt;Recently, while working on my website I’ve become exposed to the &lt;a href=&quot;http://bennolan.com/behaviour/&quot;&gt;Behaviour JavaScript library&lt;/a&gt;, which I may say is absolutely wonderful. Very simple and straight forward, completely removes the need for those cursed script tags appended to the bottom of a page; something which I’ve never liked doing but became a bit of a necessary burden! In short it allows you to execute arbitrary code on elements in the DOM using CSS selectors; so, for example, you can apply an &lt;code class=&quot;highlighter-rouge&quot;&gt;onclick&lt;/code&gt; event only to elements which match &lt;code class=&quot;highlighter-rouge&quot;&gt;form fieldset div#items a.add&lt;/code&gt;&lt;sup&gt;1&lt;/sup&gt;, very handy indeed!&lt;/p&gt;

</description>
      <pubDate>Tue, 07 Mar 2006 00:00:00 +1100</pubDate>
      <dc:date>2006-03-07T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>A time to doodle</title>
      <link>http://www.jagregory.com/writings/a-time-to-doodle</link>
      <description>&lt;p&gt;After being inspired by Kevin Cornell at &lt;a href=&quot;http://www.bearskinrug.co.uk/&quot;&gt;Bearskinrug&lt;/a&gt; I finally decided to try a drawing tablet, one of those magical designer tools. I bought a &lt;a href=&quot;http://www.amazon.co.uk/exec/obidos/ASIN/B0002DCL6G/026-0724979-2170829?%5Fencoding=UTF8&quot;&gt;Trust 1200-V2 Wireless Scroll Tablet&lt;/a&gt; from Amazon for a fairly reasonable £40, which was an absolute breeze to set up, windows picked it up without the need to install the drivers, which is always nice.&lt;/p&gt;

&lt;p&gt;My main complaint with it is that I was unable to (logically) get the tablet to map to anything less than both of my monitors, which was rubbish because that meant the tablet was being stretched horizontally; so you couldn’t trace anything without it becoming distorted. I say logically, because last thing yesterday I somehow managed it, so my tablet maps to my primary monitor and my mouse continues to work across both - it’ll take me a bit of time to get used to swapping but it’s definitely worth it. I will try and figure out how I managed to get it working, so I can at least make a note of it for next time.&lt;/p&gt;

&lt;p&gt;Now all I need to do is learn how to draw… I’m currently at &lt;a href=&quot;http://neopoleon.com/&quot;&gt;Rory&lt;/a&gt;’s standard of drawing, which of course is amazing!&lt;/p&gt;

</description>
      <pubDate>Tue, 07 Mar 2006 00:00:00 +1100</pubDate>
      <dc:date>2006-03-07T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Venkman for Firefox 1.5.0.1 (Javascript Debugger)</title>
      <link>http://www.jagregory.com/writings/venkman-for-firefox-1501-javascript-debugger</link>
      <description>&lt;p&gt;Once again the guys at Mozilla have broken quite possibly the best plug-in for Firefox: the &lt;a href=&quot;http://www.mozilla.org/projects/venkman/&quot;&gt;Venkman Javascript Debugger&lt;/a&gt;. This is becoming quite commonplace, with every update for firefox disabling the debugger until a fix is released.&lt;/p&gt;

&lt;p&gt;Anyway, even though both the extensions manager and Venkmans official website both say there aren’t any updates available, Joe Walker from &lt;a href=&quot;http://getahead.ltd.uk/home&quot;&gt;Getahead&lt;/a&gt; has created and update that contains some bug fixes from Bugzilla, but most importantly Venkman now works with Firefox 1.5.0.1!&lt;/p&gt;

&lt;p&gt;Source: &lt;a href=&quot;http://getahead.ltd.uk/ajax/venkman&quot;&gt;Venkman for Firefox 1.5&lt;/a&gt;&lt;/p&gt;

</description>
      <pubDate>Tue, 07 Feb 2006 00:00:00 +1100</pubDate>
      <dc:date>2006-02-07T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>First working weekend</title>
      <link>http://www.jagregory.com/writings/first-working-weekend</link>
      <description>&lt;p&gt;The weekend just past was my first that I’ve had to work since I left Tesco. Not an entirely unpleasant experience, although I would have much rather had my weekend.&lt;/p&gt;

&lt;p&gt;The reason we had to work the weekend was down to us launching (re-launching actually) a product for the Swift Group’s extranet, something that a lot of people had been rather worried about. Mainly because, apparently, the previous time this product was launched it corrupted important data for six months without anyone noticing. Wonderful.&lt;/p&gt;

</description>
      <pubDate>Mon, 23 Jan 2006 00:00:00 +1100</pubDate>
      <dc:date>2006-01-23T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>JavaScript getNextElement and getPreviousElement - revised</title>
      <link>http://www.jagregory.com/writings/javascript-getnextelement-and-getpreviouselement-revised</link>
      <description>&lt;blockquote&gt;
  &lt;p&gt;This is a very old post. Please, stop reading and just &lt;a href=&quot;http://jquery.com/&quot;&gt;download jQuery&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As I said I would be in my previous post, I’ve been working on improving getNextElement. I’ve improved the overall performance of the function and also created a few others with similar purpose; including the sister function getPrevious element. I outline all the functions and their uses below; you can find the download link at the top and bottom of this post.&lt;/p&gt;

&lt;p&gt;Any bugs anyone finds don’t fret to email me or post a comment here, i’ll work on fixing them asap.&lt;/p&gt;

</description>
      <pubDate>Thu, 12 Jan 2006 00:00:00 +1100</pubDate>
      <dc:date>2006-01-12T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>AJAX and Security</title>
      <link>http://www.jagregory.com/writings/ajax-and-security</link>
      <description>&lt;p&gt;I’ve been creating a content management system over the past few weeks with all the bells and whistles you’d expect from a new web project. One thing that has caught my eye is the potential security risk when using AJAX.&lt;/p&gt;

&lt;p&gt;For said project I’ve been using the &lt;a href=&quot;http://ajax.schwarz-interactive.de/csharpsample/default.aspx&quot;&gt;Ajax.Net library&lt;/a&gt; which, like most others, outputs wrapped calls to a server-side functions in javascript.&lt;/p&gt;

</description>
      <pubDate>Tue, 10 Jan 2006 00:00:00 +1100</pubDate>
      <dc:date>2006-01-10T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Prototype PeriodicalExecuter.stop() JavaScript function</title>
      <link>http://www.jagregory.com/writings/prototype-periodicalexecuter-stop-javascript-function</link>
      <description>&lt;p&gt;I’ve been playing with the &lt;a href=&quot;http://prototype.conio.net/&quot;&gt;prototype framework&lt;/a&gt; for a while now and am very impressed, the file size is a bit of a down point but that aside it’s excellent.&lt;/p&gt;

&lt;p&gt;The one thing that has slightly irritated me (and &lt;a href=&quot;http://roberthanson.blogspot.com/2005/11/prototypejs-periodicalexecuter.html&quot;&gt;others it seems&lt;/a&gt;) is that there isn’t a stop function built into the PeriodicalExecuter object. Seems something strangly simple to miss out, especially as the Ajax.PeriodicalUpdater has one built in. With that in mind I’ve made an extension my self to perform this function.&lt;/p&gt;

&lt;p&gt;I’ve simply placed the following code in a &lt;a href=&quot;http://www.jagregory.com/downloads/prototype-extensions.js&quot;&gt;prototype-extensions.js&lt;/a&gt; file and referenced it wherever needed.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;PeriodicalExecuter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerCallback&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;intervalID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onTimerEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frequency&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;PeriodicalExecuter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;clearInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;intervalID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There’s really nothing much going on in this code, all it does is take the current registerCallback function (which creates the actual timer) and stores its returned interval ID which we then use in the new stop function with the native clearInterval method.&lt;/p&gt;

&lt;p&gt;Here’s an example implementation where I fire the PeriodicalExecuter when a key is released in a text box and then stop it once the call completes, this was the main reason I created this extension, my aim was to have a waiting period of a few seconds before a ajax lookup is performed; mainly to cut down on server calls. Each time the textbox changes the PeriodicalExecuter gets reset and started again which means the function will only ever fire once the countdown is complete.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;changer&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'changer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onkeyup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PeriodicalExecuter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;textChange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'check textbox content against database here'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’m sure this method of extension is probably frowned upon from within the community and changes are expected to be submitted for the actual library, but I needed a fix asap and I’m sure a few other people might too.&lt;/p&gt;

</description>
      <pubDate>Mon, 09 Jan 2006 00:00:00 +1100</pubDate>
      <dc:date>2006-01-09T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Nested DataGrid/Repeater with Key Value access</title>
      <link>http://www.jagregory.com/writings/nested-datagridrepeater-with-key-value-access</link>
      <description>&lt;p&gt;One of my colleagues was having a problem with a datagrid nested in a repeater. We’ve done this kind of thing before with no problems, but this time the dataset wasn’t allowing key access to columns (i.e &lt;code class=&quot;highlighter-rouge&quot;&gt;Container.DataItem(&quot;ID&quot;)&lt;/code&gt;). We toiled for quite some time trying to figure out why, with no avail. Eventually we just ended up using the direct index of the column; which worked fine as long as we didn’t change the column ordering.&lt;/p&gt;

</description>
      <pubDate>Thu, 20 Oct 2005 00:00:00 +1000</pubDate>
      <dc:date>2005-10-20T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>SQL Server: Exists() function quicker than Count()</title>
      <link>http://www.jagregory.com/writings/sql-server-exists-function-quicker-than-count</link>
      <description>&lt;p&gt;You’ve seen the title; it’s true.&lt;/p&gt;

&lt;p&gt;I’ve been running an “administration” query to modify a table with around 190,000 records in. This table, segments, contains a status column called Coded. This value is derived from another table, faults. If any faults belonging to a segment has a coded status of 0 then the segment coded value is also 0.&lt;/p&gt;

&lt;p&gt;My query did an update on each row in the segments table, retrieving a &lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt; of how many faults there are with a coded status of &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; that belong to the current segment. If the &lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt; is greater than &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; then the segment coded is set to &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt;, otherwise to &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It ran for over 2 hours without any sign of finishing.&lt;/p&gt;

&lt;p&gt;I changed the query to do a simple case statement with an &lt;code class=&quot;highlighter-rouge&quot;&gt;exists&lt;/code&gt; on the faults table where &lt;code class=&quot;highlighter-rouge&quot;&gt;Coded = 0&lt;/code&gt; and it’s just finished in 4 minutes. Unbelievable.&lt;/p&gt;

</description>
      <pubDate>Thu, 22 Sep 2005 00:00:00 +1000</pubDate>
      <dc:date>2005-09-22T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>DateDiff() minus one VisualBasic assembly</title>
      <link>http://www.jagregory.com/writings/datediff-minus-one-visualbasic-assembly</link>
      <description>&lt;p&gt;I’m not a big fan of using the &lt;code class=&quot;highlighter-rouge&quot;&gt;Microsoft.VisualBasic&lt;/code&gt; assembly, I avoid it at all costs basically.&lt;/p&gt;

&lt;p&gt;As we all know, the visual basic assembly comes with a large collection of built-in functions one of which is the &lt;code class=&quot;highlighter-rouge&quot;&gt;DateDiff&lt;/code&gt; function. This takes two dates and a comparison value (e.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt; for day) and then spits out the difference.&lt;/p&gt;

&lt;p&gt;Here’s the same thing just minus the visual basic usage:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;firstDate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DateTime&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondDate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;DateTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;2005&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;TimeSpan&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;difference&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secondDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Subtract&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;firstDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// days: difference.Days
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
      <pubDate>Fri, 16 Sep 2005 00:00:00 +1000</pubDate>
      <dc:date>2005-09-16T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Launching woes</title>
      <link>http://www.jagregory.com/writings/launching-woes</link>
      <description>&lt;p&gt;Launch problems, they always occur. Yesterday (1st September) was no exception, we launched this years Swift Leisure website; a bloody huge site. As soon as it got up there it fell over, which was unfortunate. After some investigation we narrowed it down to the Url Rewriter that we have in place (unfortunately, solely my work!).&lt;/p&gt;

&lt;p&gt;The big problem with it was that it replaces the Request.ApplicationPath in any requested path with a blank string to remove any unnecessary parts of the path; &lt;code class=&quot;highlighter-rouge&quot;&gt;SwiftLeisure2006/Caravans/Abbey&lt;/code&gt; became &lt;code class=&quot;highlighter-rouge&quot;&gt;Caravans/Abbey&lt;/code&gt;. This worked fine on our local setup but we didn’t account for possible changes in the &lt;code class=&quot;highlighter-rouge&quot;&gt;Request.ApplicationPath&lt;/code&gt; when the site is situated directly in the root instead of a sub-folder. The &lt;code class=&quot;highlighter-rouge&quot;&gt;Request.ApplicationPath&lt;/code&gt; became just &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; which means &lt;code class=&quot;highlighter-rouge&quot;&gt;/Caravans/Abbey&lt;/code&gt; became &lt;code class=&quot;highlighter-rouge&quot;&gt;CaravansAbbey&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;Caravans/Abbey&lt;/code&gt;. Simple fix once we figured this out and found any similar sections throughout our controls.&lt;/p&gt;

&lt;p&gt;Live and learn, live and learn.&lt;/p&gt;

</description>
      <pubDate>Fri, 02 Sep 2005 00:00:00 +1000</pubDate>
      <dc:date>2005-09-02T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Accessibility, standards and my say</title>
      <link>http://www.jagregory.com/writings/accessibility-standards-and-my-say</link>
      <description>&lt;p&gt;The web has come a long way in the past few years, but it is still hindered greatly by the methodology of the “previous generation” of web-designers. People are still designing with the mentality of serving everyone with a page that is specifically tailored to suit their particular browser and operating system. While this did get the job done originally, it was most certainly a lot more work than it needed to be. That’s why I find the idea of generating one (and only one) document to serve all users very interesting. Most browsers are conforming to standards in some way shape or form, the majority support CSS2 and XHTML 1.1 and the ones that don’t (mostly) degrade gracefully. It’s no longer about serving a page that is pixel perfect on every system; it’s about making sure all users get a good experience from your site.&lt;/p&gt;

&lt;p&gt;Another branch of this takes the form of Accessibility. Accessibility has recently been highlighted by governments as a priority for websites; the US and UK both have their own take on the situation with relating laws and amendments. It basically boils down to any website that is providing a service should have a bare minimum of accessibility; otherwise they are discriminating against their less able customers. This means businesses are required, by law, to provide for all their customers (whether or not they have disabilities). Just as you would expect a shop to provide wheelchair ramps for disabled shoppers, you should expect pages to be designed to aid disabled web-users.&lt;/p&gt;

&lt;p&gt;Recently I equipped my self with a screen-reader (&lt;a href=&quot;http://www.freedomscientific.com/fs_products/software_jaws.asp&quot;&gt;JAWS&lt;/a&gt;) and was appalled — but not particularly shocked — at the amount of sites that are simply unusable with anything other than a standard browser. Most pages are so full of invalid markup that the screen-readers simply mumble on continuously and any actual content is undecipherable. If websites complied to the standards then their experience would be tolerable at the very least. Unfortunately the majority of website designers simply do not know (or often care) about creating accessible pages.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note: Screen-readers, for those that don’t know, take a web page and read it out using a synthesised voice. A perfectly accessible site would read the same as a printed document.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;One of the largest problems with the way pages have been designed in the past has been using the supplied tags for their appearance rather than their actual purpose. The &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;b&amp;gt;&lt;/code&gt; tags have been used to create bold headings, the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;font&amp;gt;&lt;/code&gt; tags used to change styles of fonts and worst of all the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;table&amp;gt;&lt;/code&gt; tags for layout. This means when a screen reader parses these pages it emphasises the wrong words and spouts nonsense when encountering these convoluted tags. What a properly designed page would have is a distinct separation of content and layout, of HTML and CSS. The HTML document should use be structured like a standard plain text print document; with appropriate headings, sub-headings, lists and paragraphs. These tags can then be styled using CSS to any manner to which they like. So when a screen reader encounters this page it reads the unstyled version; a perfectly formed document.&lt;/p&gt;

&lt;p&gt;That’s the end of my little rant, maybe together we learned something.&lt;/p&gt;

</description>
      <pubDate>Wed, 27 Jul 2005 00:00:00 +1000</pubDate>
      <dc:date>2005-07-27T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>ELMAH: Error Logging Modules &amp; Handlers</title>
      <link>http://www.jagregory.com/writings/error-logging-modules-ampamp-handlers-elmah</link>
      <description>&lt;p&gt;In my previous post I talked about my exception logging system that I laid to rest. Fortunately for me that doesn’t mean my applications are logless, quite the contrary. I’ll explain…&lt;/p&gt;

&lt;p&gt;When I came to terms with my logging system being inadequate and hard to maintain, I began looking for a replacement. To my delight I came across &lt;a href=&quot;http://www.raboof.com/Projects/Elmah/Elmah.aspx&quot;&gt;ELMAH&lt;/a&gt;  written by &lt;a href=&quot;http://www.raboof.com&quot;&gt;Atif Aziz&lt;/a&gt;. ELMAH is basically a couple of HttpModules and a HttpHandler that intercept any unhandled exceptions from within your application and log them. This is where the fun begins…&lt;/p&gt;

</description>
      <pubDate>Sat, 23 Jul 2005 00:00:00 +1000</pubDate>
      <dc:date>2005-07-23T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Exception Logging</title>
      <link>http://www.jagregory.com/writings/exception-logging</link>
      <description>&lt;p&gt;Something I’ve always been tinkering with for my ASP.Net applications has been exception logging. I often get irritated when users (or applications) supply me with misleading or incorrect error messages, or at least incorrect directions of how to recreate the error.&lt;/p&gt;

&lt;p&gt;I worked for quite some time trying to create a Logging system that would cater for my needs, and I got quite close to doing that. I created a small go-between object for the Trace and Debug logging and wrote that to my own XML file. The idea behind it, of course, was to make it easier for my self in debugging problems, if I could supply my self with all the data that I know I would require to trace an issue then, in theory, I could correct it much more quickly. This took me quite some time to create and of course was not perfect.&lt;/p&gt;

</description>
      <pubDate>Mon, 18 Jul 2005 00:00:00 +1000</pubDate>
      <dc:date>2005-07-18T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>A bit of culture</title>
      <link>http://www.jagregory.com/writings/a-bit-of-culture</link>
      <description>&lt;p&gt;I think this is possibly something that everyone goes through at some point in their life, the desire to be more cultured. To me and most people this means going out and buying a lot of “classic” books and giving them a good going over. If you had tried to get me to do this a few years ago there would have been no chance of it happening, but it just so happens that I’m starting to get really into reading so this is a natural extension of things.&lt;/p&gt;

</description>
      <pubDate>Mon, 13 Jun 2005 00:00:00 +1000</pubDate>
      <dc:date>2005-06-13T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Personal Note: The new job</title>
      <link>http://www.jagregory.com/writings/back-once-again</link>
      <description>&lt;p&gt;Since getting my new job I’ve been rather quiet on the blogging side of things, mostly do to the fact that I’m actually doing something with my time rather than just sitting around tinkering. Strange I know, but you get used to it.&lt;/p&gt;

&lt;p&gt;As you’d probably expect, I’m not really supposed to talk about what I do for security reasons of course. It’s mostly working for the Swift group (caravans, motorhomes) doing their internal systems and web sites. Other things as well, but it’s mainly that. It’s all very interesting, a big change from serving customers in a supermarket thats for sure. It’s a really strange feeling actually going to work and learning something, I generally come home every night having picked something new up.&lt;/p&gt;

</description>
      <pubDate>Mon, 06 Jun 2005 00:00:00 +1000</pubDate>
      <dc:date>2005-06-06T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Debugging Glory</title>
      <link>http://www.jagregory.com/writings/debugging-glory</link>
      <description>&lt;p&gt;Debugging is a great thing… Often though I’ve dreamt of some greater, more useful debugger. It would have helped if I’d actually gone out and looked for such a thing.&lt;/p&gt;

&lt;p&gt;Anyway, I haven’t found a better debugger. I’ve found how to use the current one better! I’ve enabled client-side script debugging, which is fantastic. No more using IE or Firefoxes vague error messages, I can now step through code just as you would VB/C#.Net. The big one for me though has to be the ability to debug Stored Procedures, yes SQL Server Stored Procedures. Breakpoints, step-through, the lot.&lt;/p&gt;

</description>
      <pubDate>Tue, 03 May 2005 00:00:00 +1000</pubDate>
      <dc:date>2005-05-03T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Goodbye Tesco</title>
      <link>http://www.jagregory.com/writings/goodbye-tesco</link>
      <description>&lt;p&gt;I’m outta there, finally free from the bounds of a supermarket job. I’ve been taken in by Evolution Interactive, a web/multimedia design company.&lt;/p&gt;

&lt;p&gt;I’m now a ‘New Media Developer’, nicer than ‘Checkout Assistant’ if I do say so my self. It’s very strange to be in a real job, doing something that I actually want to do (and like doing). This is going to take some getting used to…&lt;/p&gt;

</description>
      <pubDate>Mon, 11 Apr 2005 00:00:00 +1000</pubDate>
      <dc:date>2005-04-11T00:00:00+10:00</dc:date>
    </item>
    <item>
      <title>Amplification, baby</title>
      <link>http://www.jagregory.com/writings/amplification-baby</link>
      <description>&lt;p&gt;Upon receiving payment for my month of work, I promptly bought a new Amplifier for my musification; rendering me skint.&lt;/p&gt;

&lt;p&gt;Thats not the point though, the amp is hot! Line 6 Spider II 210, not the biggest they make but big enough for me. It weighs a bloody tonne! This thing comes laden with 12 pre-defined tones, 4 custom presets and all the knobs you know you couldn’t live without.&lt;/p&gt;

</description>
      <pubDate>Mon, 07 Mar 2005 00:00:00 +1100</pubDate>
      <dc:date>2005-03-07T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Caesar and Delphi</title>
      <link>http://www.jagregory.com/writings/caesar-and-delphi</link>
      <description>&lt;p&gt;While bored yesterday I decided to have a go with programming in Delphi, something which I’ve been intending to do for quite some time now. Anyway, here is the result.&lt;/p&gt;

&lt;p&gt;Download CaesarShift.zip 244kb &lt;em&gt;(this download is no longer available, sorry)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;It’s a simple cryptography program based on the shifting letters (Caesar Shift) methods. Took me about two hours, not bad to say I’ve never programmed in Delphi before.&lt;/p&gt;

&lt;p&gt;Delphi seems nice, I’m not too keen on the syntax of the language though. Its all rather too much like VB for my likings, messy and unstructured. Maybe that’s just me though.&lt;/p&gt;

</description>
      <pubDate>Fri, 07 Jan 2005 00:00:00 +1100</pubDate>
      <dc:date>2005-01-07T00:00:00+11:00</dc:date>
    </item>
    <item>
      <title>Host Problems... Again</title>
      <link>http://www.jagregory.com/writings/host-problems-again</link>
      <description>&lt;p&gt;I’m back again (I know this post is a bit late), my ex-host returned my domain name to the registrar and I’ve had to re-jiggle things to get it pointed at the right place.&lt;/p&gt;

&lt;p&gt;It all happened something like this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Web-host returns domain name.&lt;/li&gt;
  &lt;li&gt;I contact Nominet regarding re-tagging my now de-tagged domain.&lt;/li&gt;
  &lt;li&gt;I fill out a form.&lt;/li&gt;
  &lt;li&gt;I fax the form with proof of ID.&lt;/li&gt;
  &lt;li&gt;I wait 5 days for them to do anything.&lt;/li&gt;
  &lt;li&gt;Upon re-tagging, I contact a new domain management company to take care of my domain.&lt;/li&gt;
  &lt;li&gt;I wait a day for them to change my nameservers.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The end!&lt;/p&gt;

</description>
      <pubDate>Sun, 05 Dec 2004 00:00:00 +1100</pubDate>
      <dc:date>2004-12-05T00:00:00+11:00</dc:date>
    </item>
    <dc:date>2015-05-05T00:00:00+10:00</dc:date>
  </channel>
</rss>